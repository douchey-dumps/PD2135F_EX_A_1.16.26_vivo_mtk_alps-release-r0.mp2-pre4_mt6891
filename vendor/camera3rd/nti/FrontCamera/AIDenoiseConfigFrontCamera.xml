<?xml version='1.0' encoding='UTF-8'?>
<AiDenoiseConfig version="0.0.5">
    <calculateStd>1</calculateStd>
    <!-- 图像的bit数，这个配置仅在testbed自测AINR时使用。集成后由外部参数决定输入bit数 -->
    <BitWidth>14</BitWidth>
    <ModelPath>/vendor/camera3rd/vivo</ModelPath>
    <!-- 打开水印调试 -->
    <M2Watermark>0</M2Watermark>
    <!--芯片-->
    <Platform>2</Platform>
    <!--网络运行框架: vdnn / qnn / hta / eden / neuron /-->
    <Frame>neuron</Frame>
    <!--网路运行设备: 0-cpu / 1-gpu / 2-dsp / 3-npu-->
    <Device>3</Device>
    <DenoiserBranch>
        <ISOstart>0</ISOstart>
        <ISOend>15000</ISOend>
        <ExpTimeStart>0</ExpTimeStart>
        <ExpTimeEnd>10000</ExpTimeEnd>
        <!-- pattern 0: R1G1G2B1, 1 : G1R1B2G2, 2 : B1G2G1R1, 3 : G1B1R2G2-->
        <Pattern>3</Pattern>
        <!-- 黑电平基准，这个默认为10bit下64，不通位宽下的图像会自动换算 -->
        <BlackLevel>0</BlackLevel>
        <!-- ModelName 当前ISO段模型名字 -->
        <ModelName>GD2_LISO_MODEL.bin</ModelName>
        <!-- 网络训练时/实际Sensor的方差校准参数  pd2049 IMX598Main t8 x2000-->
        <NoiseLevelConfig>
            <A0>0.00081387398085</A0>
            <A1>0.07897710723</A1>
            <B0>0.0000075435172173</B0>
            <B1>-0.00501736668849</B1>
            <B2>-1.2682835913375</B2>
            <!-- 网络训练时用于校准方差估计的参数，根据网络不同是个固定值，请勿修改 -->
            <Scale>1</Scale>
        </NoiseLevelConfig>
        <nnev>
            <!--t8 qnn 量化参数-->
            <RunWidth>560</RunWidth>
            <RunHegiht>560</RunHegiht>
            <InputChannel>2</InputChannel>
            <OutputChannel>1</OutputChannel>
            <RunPattern>0</RunPattern>
            <OutputMin>-0.1455693542957306</OutputMin>
            <OutputMax>0.15243740379810333</OutputMax>
            <InputScale>3.0518509447574615e-05</InputScale>
            <InputZero>0</InputZero>
            <OutputScale>0.000004652206825994654</OutputScale>
            <OutputZero>0</OutputZero>
        </nnev>
        <OverLap>48</OverLap>
        <DefaultOverlap>48</DefaultOverlap>
        <ThreadNum>4</ThreadNum>
        <!-- 以下配置仅配置EV0生效 -->
        <!-- 用来控制噪声的调试 -->
        <!-- 方差估计将会自动通过以下公式计算： var_input = var * scale * evscale + evbias -->
        <!-- 例如evscale=0.9，此时方差估计变小，则会放出更多的噪声，若evscale=1.1，则方差估计变大，会导致降噪加强 -->
        <EvScale>1.0</EvScale>
        <EvBias>0</EvBias>
        <!-- 通过控制residule的维度来控制噪声放出的强弱，考虑原降噪公式： clean_image = observed_image - ResScale * noise -->
        <!-- AI网络估计的是noise这个值，所以当ResScale不等于1.0时，噪声都会呈现均匀增加 -->
        <ResScale>0.9</ResScale>
        <!-- 以下参数控制是否进入极度暗区的特殊模式 -->
        <!-- 该模式必须大于该ISO阈值 -->
        <M2PixelAvg>0.2</M2PixelAvg>
        <!-- 暗区的阈值定义 -->
        <M2BlackAvg>0.025</M2BlackAvg>
        <!-- 暗区占比大于xx，按0-1来计算 -->
        <M2BlackRatio>1.0</M2BlackRatio>
        <!-- 打开水印调试 -->
        <M2Watermark>0</M2Watermark>
        <!-- 打开pad -->
        <ReflectPad>1</ReflectPad>
        <!-- 打开GIC -->
        <GIC>0</GIC>
        <!-- 打开去除坏点 -->
        <deBadPoint>0</deBadPoint>
        <!-- 坏点去除阈值 -->
        <badPointThreshold>30</badPointThreshold>
    </DenoiserBranch>
</AiDenoiseConfig>