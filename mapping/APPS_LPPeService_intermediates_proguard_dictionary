# compiler: R8
# compiler_version: 2.1.7-r3
# min_api: 30
# pg_map_id: a8e21b3
# common_typos_disable
android.hidl.base.V1_0.DebugInfo -> l11.l11.l11.l11.l1l:
    int pid -> l11
    long ptr -> l1l
    int arch -> ll1
    1:1:void <init>():4:4 -> <init>
    2:4:void <init>():42:44 -> <init>
    1:1:boolean equals(java.lang.Object):54:54 -> equals
    2:3:boolean equals(java.lang.Object):57:58 -> equals
    4:4:boolean equals(java.lang.Object):61:61 -> equals
    5:5:boolean equals(java.lang.Object):64:64 -> equals
    1:5:int hashCode():72:72 -> hashCode
    1:3:void writeEmbeddedToBlob(android.os.HwBlob,long):150:152 -> l11
    1:3:void writeToParcel(android.os.HwParcel):126:128 -> l1l
    1:10:java.lang.String toString():80:89 -> toString
android.hidl.base.V1_0.DebugInfo$Architecture -> l11.l11.l11.l11.l11:
    1:1:java.lang.String toString(int):19:19 -> l11
com.mediatek.location.agps.apn.Agps2FrameworkInterface$Agps2FrameworkInterfaceReceiver -> com.mediatek.location.agps.apn.l11:
    1:1:void <init>():223:223 -> <init>
    1:3:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):278:280 -> l11
    4:11:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):325:332 -> l11
    12:12:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):321:321 -> l11
    13:15:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):315:317 -> l11
    16:16:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):311:311 -> l11
    17:17:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):307:307 -> l11
    18:18:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):303:303 -> l11
    19:22:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):296:299 -> l11
    23:23:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):292:292 -> l11
    24:24:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):288:288 -> l11
    25:26:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):283:284 -> l11
    void releaseC2kApn() -> l111
    void releaseDedicatedApn() -> l11l
    void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType) -> l1l
    void releaseWakeLock() -> l1l1
    void removeGpsIcon() -> l1ll
    void acquireWakeLock() -> ll1
    void requestC2kApn(byte[],boolean) -> ll11
    void requestDedicatedApnAndDnsQuery(java.lang.String,boolean,boolean) -> ll1l
    void isExist(byte) -> lll
    void requestGpsIcon() -> lll1
com.mediatek.location.agps.apn.AgpsApn -> com.mediatek.location.agps.apn.l1ll:
    android.net.ConnectivityManager mConnManager -> l11
    android.os.PowerManager mPowerManager -> l111
    com.mediatek.location.agps.apn.Framework2AgpsInterface$Framework2AgpsInterfaceSender mToAgpsSender -> lll1
    android.os.Handler mHandler -> l1ll
    java.util.ArrayList mAgpsNetReqs -> ll1
    com.mediatek.location.agps.apn.AgpsApnC2K mC2KApn -> l11ll
    android.net.NetworkRequest mNetReqSupl -> llll
    byte[] mEmptyIpv6 -> lll
    byte mEsuplApnMode -> l11l1
    android.net.NetworkRequest mNetReqEmergency -> l1111
    com.mediatek.socket.base.UdpServer agpsApnServer -> ll11
    com.mediatek.location.agps.apn.NetInitiatedListener mNetInitiatedListener -> l1ll1
    android.os.PowerManager$WakeLock mWakeLock -> l11l
    com.mediatek.socket.base.UdpClient mUdpClient -> ll1l
    android.content.Context mContext -> l1l
    android.os.HandlerThread mHandlerThread -> l1l1
    com.mediatek.location.agps.apn.Agps2FrameworkInterface$Agps2FrameworkInterfaceReceiver mReceiver -> l1l1l
    android.net.NetworkRequest mNetReqIms -> l111l
    com.mediatek.location.agps.apn.GpsNetInitiatedHandler mNIHandler -> l1l11
    1:1:void <init>(android.content.Context):124:124 -> <init>
    2:3:void <init>(android.content.Context):101:102 -> <init>
    4:4:void <init>(android.content.Context):146:146 -> <init>
    5:5:void <init>(android.content.Context):431:431 -> <init>
    6:7:void <init>(android.content.Context):125:126 -> <init>
    8:8:void <init>(android.content.Context):128:128 -> <init>
    9:9:void <init>(android.content.Context):130:130 -> <init>
    10:11:void <init>(android.content.Context):133:134 -> <init>
    12:14:void <init>(android.content.Context):137:139 -> <init>
    15:15:void <init>(android.content.Context):141:141 -> <init>
    1:1:byte access$000(com.mediatek.location.agps.apn.AgpsApn):76:76 -> l11
    1:1:com.mediatek.socket.base.UdpClient access$300(com.mediatek.location.agps.apn.AgpsApn):76:76 -> l111
    1:2:void handleDnsQuery(com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq):401:402 -> l1111
    1:2:void handleNetTimeout(com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq):406:407 -> l111l
    1:1:com.mediatek.location.agps.apn.Framework2AgpsInterface$Framework2AgpsInterfaceSender access$400(com.mediatek.location.agps.apn.AgpsApn):76:76 -> l11l
    1:1:void handleNinotify(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):428:428 -> l11l1
    1:1:void handleReleaseNet(com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq):411:411 -> l11ll
    2:2:void handleReleaseNet(com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq):413:413 -> l11ll
    3:4:void handleReleaseNet(com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq):415:416 -> l11ll
    1:1:byte access$002(com.mediatek.location.agps.apn.AgpsApn,byte):76:76 -> l1l
    1:1:android.net.ConnectivityManager access$500(com.mediatek.location.agps.apn.AgpsApn):76:76 -> l1l1
    void handleRemoveGpsIcon() -> l1l11
    void handleRequestGpsIcon() -> l1l1l
    1:1:android.net.NetworkRequest access$600(com.mediatek.location.agps.apn.AgpsApn):76:76 -> l1ll
    1:2:void handleRequestNet(com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq):390:391 -> l1ll1
    3:4:void handleRequestNet(com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq):393:394 -> l1ll1
    5:6:void handleRequestNet(com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq):396:397 -> l1ll1
    1:2:boolean hasIccCard():462:463 -> l1lll
    3:3:boolean hasIccCard():465:465 -> l1lll
    1:1:android.os.PowerManager$WakeLock access$100(com.mediatek.location.agps.apn.AgpsApn):76:76 -> ll1
    1:1:android.net.NetworkRequest access$700(com.mediatek.location.agps.apn.AgpsApn):76:76 -> ll11
    1:1:boolean isAirplaneModeOn():471:471 -> ll111
    1:1:void log(java.lang.String):121:121 -> ll11l
    1:1:android.net.NetworkRequest access$800(com.mediatek.location.agps.apn.AgpsApn):76:76 -> ll1l
    1:1:void removeMessages(int,java.lang.Object):380:380 -> ll1l1
    1:1:void sendMessage(int,java.lang.Object):371:371 -> ll1ll
    1:1:com.mediatek.location.agps.apn.AgpsApnC2K access$200(com.mediatek.location.agps.apn.AgpsApn):76:76 -> lll
    1:1:byte[] access$900(com.mediatek.location.agps.apn.AgpsApn):76:76 -> lll1
    1:2:void sendMessageDelayed(int,java.lang.Object,long):375:376 -> lll11
    1:1:void setup():312:312 -> lll1l
    2:4:void setup():314:316 -> lll1l
    5:7:void setup():318:320 -> lll1l
    8:10:void setup():322:324 -> lll1l
    11:16:void setup():326:331 -> lll1l
    1:3:void doReleaseNet(com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq):384:386 -> llll
com.mediatek.location.agps.apn.AgpsApn$1 -> com.mediatek.location.agps.apn.l1l:
    com.mediatek.location.agps.apn.AgpsApn this$0 -> l11
    1:1:void <init>(com.mediatek.location.agps.apn.AgpsApn):147:147 -> <init>
    1:2:void releaseC2kApn():205:206 -> l111
    1:2:void releaseDedicatedApn():180:181 -> l11l
    1:1:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):212:212 -> l1l
    2:2:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):217:217 -> l1l
    3:4:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):219:220 -> l1l
    5:5:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):231:231 -> l1l
    6:6:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):228:228 -> l1l
    7:7:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):225:225 -> l1l
    8:8:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):222:222 -> l1l
    9:11:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):235:237 -> l1l
    12:12:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):239:239 -> l1l
    13:13:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):256:256 -> l1l
    14:15:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):251:252 -> l1l
    16:17:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):246:247 -> l1l
    18:18:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):242:242 -> l1l
    19:23:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):263:267 -> l1l
    24:24:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):284:284 -> l1l
    25:25:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):281:281 -> l1l
    26:26:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):278:278 -> l1l
    27:27:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):275:275 -> l1l
    28:28:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):272:272 -> l1l
    29:29:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):269:269 -> l1l
    30:30:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):287:287 -> l1l
    31:31:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):304:304 -> l1l
    32:32:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):301:301 -> l1l
    33:33:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):298:298 -> l1l
    34:34:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):295:295 -> l1l
    35:35:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):292:292 -> l1l
    36:36:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):289:289 -> l1l
    37:37:void AgpsNiNotify(int,com.mediatek.location.agps.apn.AgpsNiType,com.mediatek.location.agps.apn.AgpsNotifyType,java.lang.String,java.lang.String,com.mediatek.location.agps.apn.AgpsNiEncodingType,com.mediatek.location.agps.apn.AgpsNiEncodingType):307:307 -> l1l
    1:2:void releaseWakeLock():162:163 -> l1l1
    1:2:void removeGpsIcon():192:193 -> l1ll
    1:2:void acquireWakeLock():156:157 -> ll1
    1:3:void requestC2kApn(byte[],boolean):198:200 -> ll11
    1:1:void requestDedicatedApnAndDnsQuery(java.lang.String,boolean,boolean):170:170 -> ll1l
    2:3:void requestDedicatedApnAndDnsQuery(java.lang.String,boolean,boolean):174:175 -> ll1l
    1:2:void isExist(byte):150:151 -> lll
    1:2:void requestGpsIcon():186:187 -> lll1
com.mediatek.location.agps.apn.AgpsApn$2 -> com.mediatek.location.agps.apn.ll1:
    com.mediatek.location.agps.apn.AgpsApn this$0 -> l11
    1:1:void <init>(com.mediatek.location.agps.apn.AgpsApn,android.os.Looper):331:331 -> <init>
    1:1:void handleMessage(android.os.Message):334:334 -> handleMessage
    2:2:void handleMessage(android.os.Message):363:363 -> handleMessage
    3:3:void handleMessage(android.os.Message):360:360 -> handleMessage
    4:4:void handleMessage(android.os.Message):357:357 -> handleMessage
    5:5:void handleMessage(android.os.Message):354:354 -> handleMessage
    6:6:void handleMessage(android.os.Message):351:351 -> handleMessage
    7:7:void handleMessage(android.os.Message):348:348 -> handleMessage
    8:8:void handleMessage(android.os.Message):345:345 -> handleMessage
    9:9:void handleMessage(android.os.Message):342:342 -> handleMessage
    10:10:void handleMessage(android.os.Message):339:339 -> handleMessage
    11:11:void handleMessage(android.os.Message):336:336 -> handleMessage
com.mediatek.location.agps.apn.AgpsApn$3 -> com.mediatek.location.agps.apn.lll:
    com.mediatek.location.agps.apn.AgpsApn this$0 -> l11
    1:1:void <init>(com.mediatek.location.agps.apn.AgpsApn):431:431 -> <init>
    1:1:boolean sendNiResponse(int,int):436:436 -> l11
    2:2:boolean sendNiResponse(int,int):439:439 -> l11
    3:3:boolean sendNiResponse(int,int):448:448 -> l11
    4:4:boolean sendNiResponse(int,int):445:445 -> l11
    5:5:boolean sendNiResponse(int,int):442:442 -> l11
    6:6:boolean sendNiResponse(int,int):456:456 -> l11
com.mediatek.location.agps.apn.AgpsApn$4 -> com.mediatek.location.agps.apn.l111:
    int[] $SwitchMap$com$mediatek$location$agps$apn$AgpsNotifyType -> l1l
    int[] $SwitchMap$com$mediatek$location$agps$apn$AgpsNiType -> l11
    int[] $SwitchMap$com$mediatek$location$agps$apn$AgpsNiEncodingType -> ll1
    1:1:void <clinit>():267:267 -> <clinit>
    2:2:void <clinit>():239:239 -> <clinit>
    3:3:void <clinit>():220:220 -> <clinit>
com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq -> com.mediatek.location.agps.apn.l1l1:
    android.net.ConnectivityManager$NetworkCallback mNetworkCallback -> l1ll
    boolean mIsSuplApn -> lll
    android.net.NetworkRequest mNetReq -> l11l
    boolean mIsQueried -> l111
    java.lang.String mFqdn -> l11
    boolean mIsEsupl -> ll1
    android.net.Network mNet -> l1l1
    byte[] mAddr -> l1l
    com.mediatek.location.agps.apn.AgpsApn this$0 -> ll11
    1:1:void <init>(com.mediatek.location.agps.apn.AgpsApn,java.lang.String,boolean,boolean):485:485 -> <init>
    2:5:void <init>(com.mediatek.location.agps.apn.AgpsApn,java.lang.String,boolean,boolean):480:483 -> <init>
    6:8:void <init>(com.mediatek.location.agps.apn.AgpsApn,java.lang.String,boolean,boolean):486:488 -> <init>
    9:9:void <init>(com.mediatek.location.agps.apn.AgpsApn,byte[],boolean):491:491 -> <init>
    10:13:void <init>(com.mediatek.location.agps.apn.AgpsApn,byte[],boolean):480:483 -> <init>
    14:15:void <init>(com.mediatek.location.agps.apn.AgpsApn,byte[],boolean):492:493 -> <init>
    1:1:void decideRoute():500:500 -> l11
    2:4:void decideRoute():502:504 -> l11
    5:5:void decideRoute():506:506 -> l11
    6:6:void decideRoute():508:508 -> l11
    7:7:void decideRoute():511:511 -> l11
    8:8:void decideRoute():513:513 -> l11
    9:9:void decideRoute():516:516 -> l11
    10:10:void decideRoute():518:518 -> l11
    11:11:void decideRoute():522:522 -> l11
    12:15:void decideRoute():524:527 -> l11
    16:19:void decideRoute():529:532 -> l11
    20:23:void decideRoute():536:539 -> l11
    1:2:void queryDns():587:588 -> l1l
    3:3:void queryDns():593:593 -> l1l
    4:5:void queryDns():596:597 -> l1l
    6:6:void queryDns():599:599 -> l1l
    7:10:void queryDns():601:604 -> l1l
    11:11:void queryDns():603:603 -> l1l
    12:12:void queryDns():605:605 -> l1l
    13:17:void queryDns():607:611 -> l1l
    18:18:void queryDns():617:617 -> l1l
    19:21:void queryDns():620:622 -> l1l
    22:22:void queryDns():624:624 -> l1l
    23:23:void queryDns():627:627 -> l1l
    24:24:void queryDns():629:629 -> l1l
    25:25:void queryDns():624:624 -> l1l
    26:26:void queryDns():635:635 -> l1l
    1:1:void releaseNet():640:640 -> ll1
    2:6:void releaseNet():642:646 -> ll1
    7:11:void releaseNet():649:653 -> ll1
    1:3:void requestNet():545:547 -> lll
    4:9:void requestNet():566:571 -> lll
    10:10:void requestNet():576:576 -> lll
    11:11:void requestNet():582:582 -> lll
com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq$1 -> com.mediatek.location.agps.apn.l11l:
    com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq this$1 -> l11
    1:1:void <init>(com.mediatek.location.agps.apn.AgpsApn$AgpsNetReq):547:547 -> <init>
    1:6:void onAvailable(android.net.Network):550:555 -> onAvailable
    7:7:void onAvailable(android.net.Network):557:557 -> onAvailable
    1:1:void onLost(android.net.Network):562:562 -> onLost
com.mediatek.location.agps.apn.AgpsApnC2K -> com.mediatek.location.agps.apn.lll1:
    android.net.ConnectivityManager$NetworkCallback mSuplConnectivityCallback -> l1ll
    com.mediatek.socket.base.UdpClient mUdpClient -> lll
    android.net.ConnectivityManager mConnManager -> l11
    int mAGpsDataConnectionState -> l11l
    android.content.Context mContext -> l1l
    android.content.BroadcastReceiver mBroadcastReceiver -> l1l1
    com.mediatek.location.agps.apn.Framework2AgpsInterface$Framework2AgpsInterfaceSender mToAgpsSender -> ll1
    android.os.Handler mHandler -> l111
    1:1:void <init>(android.content.Context,android.net.ConnectivityManager,com.mediatek.location.agps.apn.Framework2AgpsInterface$Framework2AgpsInterfaceSender,com.mediatek.socket.base.UdpClient,android.os.Handler):101:101 -> <init>
    2:2:void <init>(android.content.Context,android.net.ConnectivityManager,com.mediatek.location.agps.apn.Framework2AgpsInterface$Framework2AgpsInterfaceSender,com.mediatek.socket.base.UdpClient,android.os.Handler):113:113 -> <init>
    3:3:void <init>(android.content.Context,android.net.ConnectivityManager,com.mediatek.location.agps.apn.Framework2AgpsInterface$Framework2AgpsInterfaceSender,com.mediatek.socket.base.UdpClient,android.os.Handler):127:127 -> <init>
    4:8:void <init>(android.content.Context,android.net.ConnectivityManager,com.mediatek.location.agps.apn.Framework2AgpsInterface$Framework2AgpsInterfaceSender,com.mediatek.socket.base.UdpClient,android.os.Handler):102:106 -> <init>
    9:11:void <init>(android.content.Context,android.net.ConnectivityManager,com.mediatek.location.agps.apn.Framework2AgpsInterface$Framework2AgpsInterfaceSender,com.mediatek.socket.base.UdpClient,android.os.Handler):108:110 -> <init>
    1:1:com.mediatek.socket.base.UdpClient access$000(com.mediatek.location.agps.apn.AgpsApnC2K):64:64 -> l11
    1:1:int getApnIpType(java.lang.String):299:299 -> l111
    2:2:int getApnIpType(java.lang.String):302:302 -> l111
    3:4:int getApnIpType(java.lang.String):309:310 -> l111
    5:5:int getApnIpType(java.lang.String):318:318 -> l111
    6:6:int getApnIpType(java.lang.String):312:312 -> l111
    7:7:int getApnIpType(java.lang.String):315:315 -> l111
    8:8:int getApnIpType(java.lang.String):318:318 -> l111
    9:9:int getApnIpType(java.lang.String):320:320 -> l111
    1:1:int translateToApnIpType(java.lang.String,java.lang.String):326:326 -> l1111
    2:2:int translateToApnIpType(java.lang.String,java.lang.String):329:329 -> l1111
    3:3:int translateToApnIpType(java.lang.String,java.lang.String):332:332 -> l1111
    4:5:int translateToApnIpType(java.lang.String,java.lang.String):337:338 -> l1111
    1:1:java.lang.String getSelectedApn():269:269 -> l11l
    2:2:java.lang.String getSelectedApn():272:272 -> l11l
    3:4:java.lang.String getSelectedApn():278:279 -> l11l
    5:5:java.lang.String getSelectedApn():287:287 -> l11l
    6:6:java.lang.String getSelectedApn():281:281 -> l11l
    7:7:java.lang.String getSelectedApn():284:284 -> l11l
    8:8:java.lang.String getSelectedApn():287:287 -> l11l
    9:9:java.lang.String getSelectedApn():289:289 -> l11l
    1:1:com.mediatek.location.agps.apn.Framework2AgpsInterface$Framework2AgpsInterfaceSender access$100(com.mediatek.location.agps.apn.AgpsApnC2K):64:64 -> l1l
    1:1:void handleNetworkCallback(int,java.lang.Object):188:188 -> l1l1
    2:3:void handleNetworkCallback(int,java.lang.Object):190:191 -> l1l1
    4:4:void handleNetworkCallback(int,java.lang.Object):259:259 -> l1l1
    5:5:void handleNetworkCallback(int,java.lang.Object):256:256 -> l1l1
    6:6:void handleNetworkCallback(int,java.lang.Object):252:252 -> l1l1
    7:10:void handleNetworkCallback(int,java.lang.Object):200:203 -> l1l1
    11:12:void handleNetworkCallback(int,java.lang.Object):206:207 -> l1l1
    13:15:void handleNetworkCallback(int,java.lang.Object):215:217 -> l1l1
    16:16:void handleNetworkCallback(int,java.lang.Object):223:223 -> l1l1
    17:17:void handleNetworkCallback(int,java.lang.Object):228:228 -> l1l1
    18:18:void handleNetworkCallback(int,java.lang.Object):225:225 -> l1l1
    19:19:void handleNetworkCallback(int,java.lang.Object):229:229 -> l1l1
    20:20:void handleNetworkCallback(int,java.lang.Object):231:231 -> l1l1
    21:21:void handleNetworkCallback(int,java.lang.Object):233:233 -> l1l1
    22:25:void handleNetworkCallback(int,java.lang.Object):237:237 -> l1l1
    26:26:void handleNetworkCallback(int,java.lang.Object):241:241 -> l1l1
    27:27:void handleNetworkCallback(int,java.lang.Object):193:193 -> l1l1
    1:1:void handleReleaseDataConn():265:265 -> l1ll
    1:1:java.lang.String agpsDataConnStateAsString():377:377 -> ll1
    1:1:void handleRequestDataConn(java.lang.Object):149:149 -> ll11
    2:3:void handleRequestDataConn(java.lang.Object):151:152 -> ll11
    4:5:void handleRequestDataConn(java.lang.Object):159:160 -> ll11
    6:7:void handleRequestDataConn(java.lang.Object):164:165 -> ll11
    8:8:void handleRequestDataConn(java.lang.Object):167:167 -> ll11
    9:9:void handleRequestDataConn(java.lang.Object):171:171 -> ll11
    10:10:void handleRequestDataConn(java.lang.Object):175:175 -> ll11
    11:15:void handleRequestDataConn(java.lang.Object):177:181 -> ll11
    16:16:void handleRequestDataConn(java.lang.Object):154:154 -> ll11
    1:1:boolean isAirplaneModeOn():410:410 -> ll1l
    java.lang.String agpsDataConnStatusAsString(int) -> lll
    1:2:void releaseSuplConnection(int):350:351 -> lll1
    3:3:void releaseSuplConnection(int):348:348 -> lll1
    4:4:void releaseSuplConnection(int):352:352 -> lll1
    5:5:void releaseSuplConnection(int):355:355 -> lll1
    6:6:void releaseSuplConnection(int):358:358 -> lll1
    7:7:void releaseSuplConnection(int):360:360 -> lll1
    8:8:void releaseSuplConnection(int):369:369 -> lll1
    9:9:void releaseSuplConnection(int):363:363 -> lll1
    10:10:void releaseSuplConnection(int):366:366 -> lll1
    1:1:void sendMessage(int,int,java.lang.Object):343:343 -> llll
com.mediatek.location.agps.apn.AgpsApnC2K$1 -> com.mediatek.location.agps.apn.ll11:
    com.mediatek.location.agps.apn.AgpsApnC2K this$0 -> l11
    1:1:void <init>(com.mediatek.location.agps.apn.AgpsApnC2K):113:113 -> <init>
    1:1:void onReceive(android.content.Context,android.content.Intent):116:116 -> onReceive
    2:6:void onReceive(android.content.Context,android.content.Intent):118:122 -> onReceive
com.mediatek.location.agps.apn.AgpsApnC2K$2 -> com.mediatek.location.agps.apn.ll1l:
    com.mediatek.location.agps.apn.AgpsApnC2K this$0 -> l11
    1:1:void <init>(com.mediatek.location.agps.apn.AgpsApnC2K):128:128 -> <init>
    1:2:void onAvailable(android.net.Network):131:132 -> onAvailable
    1:2:void onLost(android.net.Network):137:138 -> onLost
    1:2:void onUnavailable():143:144 -> onUnavailable
com.mediatek.location.agps.apn.AgpsNiEncodingType -> com.mediatek.location.agps.apn.AgpsNiEncodingType:
    com.mediatek.location.agps.apn.AgpsNiEncodingType AGPS_NI_ENCODING_TYPE_UTF8 -> ll1
    com.mediatek.location.agps.apn.AgpsNiEncodingType[] $VALUES -> l1l1
    com.mediatek.location.agps.apn.AgpsNiEncodingType AGPS_NI_ENCODING_TYPE_GSM7 -> l1l
    com.mediatek.location.agps.apn.AgpsNiEncodingType _instance -> l11l
    com.mediatek.location.agps.apn.AgpsNiEncodingType AGPS_NI_ENCODING_TYPE_UCS2 -> lll
    com.mediatek.location.agps.apn.AgpsNiEncodingType AGPS_NI_ENCODING_TYPE_NONE -> l11
    com.mediatek.location.agps.apn.AgpsNiEncodingType AGPS_NI_ENCODING_TYPE_ASCII -> l111
    1:5:void <clinit>():8:12 -> <clinit>
    6:6:void <clinit>():7:7 -> <clinit>
    7:7:void <clinit>():15:15 -> <clinit>
    1:1:void <init>(java.lang.String,int):7:7 -> <init>
    1:1:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):19:19 -> l11
    2:2:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):33:33 -> l11
    3:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):30:30 -> l11
    4:4:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):27:27 -> l11
    5:5:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):24:24 -> l11
    6:6:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):21:21 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:1:com.mediatek.location.agps.apn.AgpsNiEncodingType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):42:42 -> ll1
    2:2:com.mediatek.location.agps.apn.AgpsNiEncodingType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):53:53 -> ll1
    3:3:com.mediatek.location.agps.apn.AgpsNiEncodingType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):51:51 -> ll1
    4:4:com.mediatek.location.agps.apn.AgpsNiEncodingType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):49:49 -> ll1
    5:5:com.mediatek.location.agps.apn.AgpsNiEncodingType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):47:47 -> ll1
    6:6:com.mediatek.location.agps.apn.AgpsNiEncodingType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):45:45 -> ll1
    1:1:com.mediatek.location.agps.apn.AgpsNiEncodingType valueOf(java.lang.String):7:7 -> valueOf
    1:1:com.mediatek.location.agps.apn.AgpsNiEncodingType[] values():7:7 -> values
com.mediatek.location.agps.apn.AgpsNiEncodingType$1 -> com.mediatek.location.agps.apn.llll:
    int[] $SwitchMap$com$mediatek$location$agps$apn$AgpsNiEncodingType -> l11
    1:1:void <clinit>():19:19 -> <clinit>
com.mediatek.location.agps.apn.AgpsNiResponseType -> com.mediatek.location.agps.apn.AgpsNiResponseType:
    com.mediatek.location.agps.apn.AgpsNiResponseType AGPS_NI_RESPONSE_NORESP -> ll1
    com.mediatek.location.agps.apn.AgpsNiResponseType AGPS_NI_RESPONSE_DENY -> l1l
    com.mediatek.location.agps.apn.AgpsNiResponseType[] $VALUES -> l111
    com.mediatek.location.agps.apn.AgpsNiResponseType AGPS_NI_RESPONSE_ACCEPT -> l11
    com.mediatek.location.agps.apn.AgpsNiResponseType AGPS_NI_RESPONSE_IGNORE -> lll
    1:4:void <clinit>():8:11 -> <clinit>
    5:5:void <clinit>():7:7 -> <clinit>
    1:1:void <init>(java.lang.String,int):7:7 -> <init>
    1:1:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):18:18 -> l11
    2:2:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):29:29 -> l11
    3:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):26:26 -> l11
    4:4:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):23:23 -> l11
    5:5:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):20:20 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:1:com.mediatek.location.agps.apn.AgpsNiResponseType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):38:38 -> ll1
    2:2:com.mediatek.location.agps.apn.AgpsNiResponseType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):47:47 -> ll1
    3:3:com.mediatek.location.agps.apn.AgpsNiResponseType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):45:45 -> ll1
    4:4:com.mediatek.location.agps.apn.AgpsNiResponseType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):43:43 -> ll1
    5:5:com.mediatek.location.agps.apn.AgpsNiResponseType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):41:41 -> ll1
    1:1:com.mediatek.location.agps.apn.AgpsNiResponseType valueOf(java.lang.String):7:7 -> valueOf
    1:1:com.mediatek.location.agps.apn.AgpsNiResponseType[] values():7:7 -> values
com.mediatek.location.agps.apn.AgpsNiResponseType$1 -> com.mediatek.location.agps.apn.l1111:
    int[] $SwitchMap$com$mediatek$location$agps$apn$AgpsNiResponseType -> l11
    1:1:void <clinit>():18:18 -> <clinit>
com.mediatek.location.agps.apn.AgpsNiType -> com.mediatek.location.agps.apn.AgpsNiType:
    com.mediatek.location.agps.apn.AgpsNiType[] $VALUES -> l11l
    com.mediatek.location.agps.apn.AgpsNiType AGPS_NI_TYPE_UMTS_SUPL -> l1l
    com.mediatek.location.agps.apn.AgpsNiType AGPS_NI_TYPE_VOICE -> l11
    com.mediatek.location.agps.apn.AgpsNiType AGPS_NI_TYPE_EMERGENCY_SUPL -> lll
    com.mediatek.location.agps.apn.AgpsNiType _instance -> l111
    com.mediatek.location.agps.apn.AgpsNiType AGPS_NI_TYPE_UMTS_CTRL_PLANE -> ll1
    1:4:void <clinit>():8:11 -> <clinit>
    5:5:void <clinit>():7:7 -> <clinit>
    6:6:void <clinit>():14:14 -> <clinit>
    1:1:void <init>(java.lang.String,int):7:7 -> <init>
    1:1:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):18:18 -> l11
    2:2:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):29:29 -> l11
    3:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):26:26 -> l11
    4:4:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):23:23 -> l11
    5:5:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):20:20 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:1:com.mediatek.location.agps.apn.AgpsNiType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):38:38 -> ll1
    2:2:com.mediatek.location.agps.apn.AgpsNiType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):47:47 -> ll1
    3:3:com.mediatek.location.agps.apn.AgpsNiType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):45:45 -> ll1
    4:4:com.mediatek.location.agps.apn.AgpsNiType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):43:43 -> ll1
    5:5:com.mediatek.location.agps.apn.AgpsNiType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):41:41 -> ll1
    1:1:com.mediatek.location.agps.apn.AgpsNiType valueOf(java.lang.String):7:7 -> valueOf
    1:1:com.mediatek.location.agps.apn.AgpsNiType[] values():7:7 -> values
com.mediatek.location.agps.apn.AgpsNiType$1 -> com.mediatek.location.agps.apn.l111l:
    int[] $SwitchMap$com$mediatek$location$agps$apn$AgpsNiType -> l11
    1:1:void <clinit>():18:18 -> <clinit>
com.mediatek.location.agps.apn.AgpsNotifyType -> com.mediatek.location.agps.apn.AgpsNotifyType:
    com.mediatek.location.agps.apn.AgpsNotifyType AGPS_NOTIFY_TYPE_NOTIFY_ALLOW_NO_ANSWER -> ll1
    com.mediatek.location.agps.apn.AgpsNotifyType AGPS_NOTIFY_TYPE_NONE -> l11
    com.mediatek.location.agps.apn.AgpsNotifyType AGPS_NOTIFY_TYPE_PRIVACY -> l111
    com.mediatek.location.agps.apn.AgpsNotifyType AGPS_NOTIFY_TYPE_NOTIFY_DENY_NO_ANSWER -> lll
    com.mediatek.location.agps.apn.AgpsNotifyType[] $VALUES -> l1l1
    com.mediatek.location.agps.apn.AgpsNotifyType AGPS_NOTIFY_TYPE_NOTIFY_ONLY -> l1l
    com.mediatek.location.agps.apn.AgpsNotifyType _instance -> l11l
    1:5:void <clinit>():8:12 -> <clinit>
    6:6:void <clinit>():7:7 -> <clinit>
    7:7:void <clinit>():15:15 -> <clinit>
    1:1:void <init>(java.lang.String,int):7:7 -> <init>
    1:1:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):19:19 -> l11
    2:2:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):33:33 -> l11
    3:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):30:30 -> l11
    4:4:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):27:27 -> l11
    5:5:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):24:24 -> l11
    6:6:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):21:21 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:1:com.mediatek.location.agps.apn.AgpsNotifyType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):42:42 -> ll1
    2:2:com.mediatek.location.agps.apn.AgpsNotifyType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):53:53 -> ll1
    3:3:com.mediatek.location.agps.apn.AgpsNotifyType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):51:51 -> ll1
    4:4:com.mediatek.location.agps.apn.AgpsNotifyType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):49:49 -> ll1
    5:5:com.mediatek.location.agps.apn.AgpsNotifyType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):47:47 -> ll1
    6:6:com.mediatek.location.agps.apn.AgpsNotifyType decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):45:45 -> ll1
    1:1:com.mediatek.location.agps.apn.AgpsNotifyType valueOf(java.lang.String):7:7 -> valueOf
    1:1:com.mediatek.location.agps.apn.AgpsNotifyType[] values():7:7 -> values
com.mediatek.location.agps.apn.AgpsNotifyType$1 -> com.mediatek.location.agps.apn.l11l1:
    int[] $SwitchMap$com$mediatek$location$agps$apn$AgpsNotifyType -> l11
    1:1:void <clinit>():19:19 -> <clinit>
com.mediatek.location.agps.apn.Framework2AgpsInterface$Framework2AgpsInterfaceSender -> com.mediatek.location.agps.apn.l11ll:
    1:1:void <init>():26:26 -> <init>
    1:3:boolean AgpsNiResponse(com.mediatek.socket.base.UdpClient,int,com.mediatek.location.agps.apn.AgpsNiResponseType):139:141 -> l11
    4:12:boolean AgpsNiResponse(com.mediatek.socket.base.UdpClient,int,com.mediatek.location.agps.apn.AgpsNiResponseType):143:151 -> l11
    1:3:boolean C2kApnResult(com.mediatek.socket.base.UdpClient,int,boolean,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,int):70:72 -> l111
    4:22:boolean C2kApnResult(com.mediatek.socket.base.UdpClient,int,boolean,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,int):74:92 -> l111
    1:3:boolean DnsQueryResult2(com.mediatek.socket.base.UdpClient,boolean,boolean,int,boolean,byte[],boolean,int):48:50 -> l11l
    4:18:boolean DnsQueryResult2(com.mediatek.socket.base.UdpClient,boolean,boolean,int,boolean,byte[],boolean,int):52:66 -> l11l
    1:3:boolean AirplaneModeChanged(com.mediatek.socket.base.UdpClient,boolean):124:126 -> l1l
    4:11:boolean AirplaneModeChanged(com.mediatek.socket.base.UdpClient,boolean):128:135 -> l1l
    1:3:boolean C2kApnClosed(com.mediatek.socket.base.UdpClient):110:112 -> ll1
    4:10:boolean C2kApnClosed(com.mediatek.socket.base.UdpClient):114:120 -> ll1
    1:3:boolean C2kApnFailed(com.mediatek.socket.base.UdpClient):96:98 -> lll
    4:10:boolean C2kApnFailed(com.mediatek.socket.base.UdpClient):100:106 -> lll
com.mediatek.location.agps.apn.GpsNetInitiatedHandler -> com.mediatek.location.agps.apn.ll11l:
    long mEmergencyExtensionMillis -> lll1
    android.content.Context mContext -> l11
    android.location.LocationManager mLocationManager -> lll
    boolean mIsLocationEnabled -> l1ll
    boolean mPlaySounds -> l111
    boolean mIsHexInput -> l1l11
    android.app.Notification$Builder mNiNotificationBuilder -> l11l1
    boolean mPopupImmediately -> l11l
    android.telephony.TelephonyManager mTelephonyManager -> l1l
    android.os.Handler mHandler -> l11ll
    android.content.BroadcastReceiver mBroadcastReciever -> l111l
    android.app.AlertDialog mAlertDialog -> llll
    com.mediatek.location.agps.apn.NetInitiatedListener mNetInitiatedListener -> ll11
    long mCallEndElapsedRealtimeMillis -> ll1l
    boolean mIsSuplEsEnabled -> l1l1
    android.telecom.TelecomManager mTelecom -> ll1
    com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification mCurNotif -> l1111
    1:1:void <init>(android.content.Context,com.mediatek.location.agps.apn.NetInitiatedListener,boolean):157:157 -> <init>
    2:3:void <init>(android.content.Context,com.mediatek.location.agps.apn.NetInitiatedListener,boolean):92:93 -> <init>
    4:4:void <init>(android.content.Context,com.mediatek.location.agps.apn.NetInitiatedListener,boolean):102:102 -> <init>
    5:6:void <init>(android.content.Context,com.mediatek.location.agps.apn.NetInitiatedListener,boolean):110:111 -> <init>
    7:7:void <init>(android.content.Context,com.mediatek.location.agps.apn.NetInitiatedListener,boolean):136:136 -> <init>
    8:8:void <init>(android.content.Context,com.mediatek.location.agps.apn.NetInitiatedListener,boolean):430:430 -> <init>
    9:9:void <init>(android.content.Context,com.mediatek.location.agps.apn.NetInitiatedListener,boolean):158:158 -> <init>
    10:10:void <init>(android.content.Context,com.mediatek.location.agps.apn.NetInitiatedListener,boolean):163:163 -> <init>
    11:13:void <init>(android.content.Context,com.mediatek.location.agps.apn.NetInitiatedListener,boolean):166:168 -> <init>
    14:15:void <init>(android.content.Context,com.mediatek.location.agps.apn.NetInitiatedListener,boolean):170:171 -> <init>
    16:18:void <init>(android.content.Context,com.mediatek.location.agps.apn.NetInitiatedListener,boolean):188:190 -> <init>
    19:19:void <init>(android.content.Context,com.mediatek.location.agps.apn.NetInitiatedListener,boolean):161:161 -> <init>
    1:1:com.mediatek.location.agps.apn.NetInitiatedListener access$000(com.mediatek.location.agps.apn.GpsNetInitiatedHandler):50:50 -> l11
    1:1:java.lang.String decodeUTF8String(byte[]):513:513 -> l111
    2:2:java.lang.String decodeUTF8String(byte[]):517:517 -> l111
    1:1:boolean getSuplEsEnabled():198:198 -> l1111
    1:1:void handleNi(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):277:277 -> l111l
    2:2:void handleNi(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):282:282 -> l111l
    3:3:void handleNi(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):277:277 -> l111l
    4:4:void handleNi(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):284:284 -> l111l
    5:5:void handleNi(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):286:286 -> l111l
    6:6:void handleNi(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):289:289 -> l111l
    7:7:void handleNi(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):292:292 -> l111l
    8:8:void handleNi(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):294:294 -> l111l
    9:9:void handleNi(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):297:297 -> l111l
    10:11:void handleNi(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):302:303 -> l111l
    1:1:java.lang.String getDialogMessage(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification,android.content.Context):605:605 -> l11l
    1:1:void handleNiInEs(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):311:311 -> l11l1
    2:4:void handleNiInEs(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):326:328 -> l11l1
    5:5:void handleNiInEs(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):331:331 -> l11l1
    1:1:void handleNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):245:245 -> l11ll
    2:3:void handleNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):249:250 -> l11ll
    4:4:void handleNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):245:245 -> l11ll
    5:6:void handleNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):253:254 -> l11ll
    7:7:void handleNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):256:256 -> l11ll
    8:8:void handleNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):259:259 -> l11ll
    1:2:java.lang.String decodeGSMPackedString(byte[]):482:483 -> l1l
    3:3:java.lang.String decodeGSMPackedString(byte[]):490:490 -> l1l
    4:4:java.lang.String decodeGSMPackedString(byte[]):492:492 -> l1l
    5:5:java.lang.String decodeGSMPackedString(byte[]):498:498 -> l1l
    6:6:java.lang.String decodeGSMPackedString(byte[]):502:502 -> l1l
    1:1:java.lang.String getDialogTitle(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification,android.content.Context):599:599 -> l1l1
    1:1:void openNiDialog(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):397:397 -> l1l11
    2:5:void openNiDialog(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):401:404 -> l1l11
    6:6:void openNiDialog(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):406:406 -> l1l11
    7:7:void openNiDialog(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):414:414 -> l1l11
    8:13:void openNiDialog(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):422:427 -> l1l11
    1:2:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):337:338 -> l1l1l
    3:3:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):340:340 -> l1l1l
    4:5:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):343:344 -> l1l1l
    6:6:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):346:346 -> l1l1l
    7:7:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):350:350 -> l1l1l
    8:8:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):354:354 -> l1l1l
    9:10:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):357:358 -> l1l1l
    11:15:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):360:364 -> l1l1l
    16:17:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):368:369 -> l1l1l
    18:18:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):371:371 -> l1l1l
    19:23:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):379:383 -> l1l1l
    24:27:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):385:388 -> l1l1l
    28:28:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):390:390 -> l1l1l
    29:29:void setNiNotification(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification):392:392 -> l1l1l
    1:1:boolean getInEmergency():228:228 -> l1ll
    2:2:boolean getInEmergency():230:230 -> l1ll
    3:5:boolean getInEmergency():232:234 -> l1ll
    1:1:void setSuplEsEnabled(boolean):194:194 -> l1ll1
    1:2:byte[] stringToByteArray(java.lang.String,boolean):452:453 -> l1lll
    3:3:byte[] stringToByteArray(java.lang.String,boolean):460:460 -> l1lll
    4:4:byte[] stringToByteArray(java.lang.String,boolean):466:466 -> l1lll
    1:1:java.lang.String decodeString(java.lang.String,boolean,int):553:553 -> ll1
    2:2:java.lang.String decodeString(java.lang.String,boolean,int):566:566 -> ll1
    3:3:java.lang.String decodeString(java.lang.String,boolean,int):563:563 -> ll1
    4:4:java.lang.String decodeString(java.lang.String,boolean,int):560:560 -> ll1
    5:5:java.lang.String decodeString(java.lang.String,boolean,int):557:557 -> ll1
    1:1:boolean getLocationEnabled():212:212 -> ll11
    1:1:void updateLocationMode():205:205 -> ll111
    1:4:java.lang.String getNotifMessage(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification,android.content.Context):590:590 -> ll1l
    1:1:java.lang.String decodeUCS2String(byte[]):526:526 -> lll
    2:2:java.lang.String decodeUCS2String(byte[]):530:530 -> lll
    1:4:java.lang.String getNotifTicker(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification,android.content.Context):574:574 -> lll1
    1:1:java.lang.String getNotifTitle(com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification,android.content.Context):583:583 -> llll
com.mediatek.location.agps.apn.GpsNetInitiatedHandler$1 -> com.mediatek.location.agps.apn.l1l11:
    com.mediatek.location.agps.apn.GpsNetInitiatedHandler this$0 -> l11
    1:1:void <init>(com.mediatek.location.agps.apn.GpsNetInitiatedHandler):136:136 -> <init>
    1:4:void onReceive(android.content.Context,android.content.Intent):139:142 -> onReceive
com.mediatek.location.agps.apn.GpsNetInitiatedHandler$2 -> com.mediatek.location.agps.apn.l1l1l:
    com.mediatek.location.agps.apn.GpsNetInitiatedHandler this$0 -> l11
    1:1:void <init>(com.mediatek.location.agps.apn.GpsNetInitiatedHandler):407:407 -> <init>
    1:1:void onClick(android.content.DialogInterface,int):409:409 -> onClick
com.mediatek.location.agps.apn.GpsNetInitiatedHandler$3 -> com.mediatek.location.agps.apn.l1ll1:
    com.mediatek.location.agps.apn.GpsNetInitiatedHandler this$0 -> l11
    1:1:void <init>(com.mediatek.location.agps.apn.GpsNetInitiatedHandler):415:415 -> <init>
    1:1:void onClick(android.content.DialogInterface,int):417:417 -> onClick
com.mediatek.location.agps.apn.GpsNetInitiatedHandler$4 -> com.mediatek.location.agps.apn.l1lll:
    com.mediatek.location.agps.apn.GpsNetInitiatedHandler this$0 -> l11
    1:1:void <init>(com.mediatek.location.agps.apn.GpsNetInitiatedHandler):430:430 -> <init>
    1:1:void handleMessage(android.os.Message):432:432 -> handleMessage
    2:5:void handleMessage(android.os.Message):434:437 -> handleMessage
    6:6:void handleMessage(android.os.Message):441:441 -> handleMessage
com.mediatek.location.agps.apn.GpsNetInitiatedHandler$GpsNiNotification -> com.mediatek.location.agps.apn.ll111:
    int notificationId -> l11
    int requestorIdEncoding -> ll1l
    boolean needVerify -> lll
    java.lang.String text -> ll11
    int timeout -> l11l
    boolean privacyOverride -> l111
    java.lang.String requestorId -> l1ll
    boolean needNotify -> ll1
    int niType -> l1l
    int textEncoding -> lll1
    int defaultResponse -> l1l1
    1:1:void <init>():116:116 -> <init>
com.mediatek.location.agps.apn.NetInitiatedListener -> com.mediatek.location.agps.apn.ll1l1:
    boolean sendNiResponse(int,int) -> l11
com.mediatek.location.lppe.bluetooth.BluetoothMeasurement -> com.mediatek.location.lppe.bluetooth.l11:
    byte[] mac -> l11
    com.mediatek.location.lppe.bluetooth.BluetoothRTD rtd -> l11l
    boolean rtdValid -> l111
    short rssi -> lll
    com.mediatek.location.lppe.bluetooth.BluetoothMeasurement _instance -> l1l1
    boolean rssiValid -> ll1
    com.mediatek.location.lppe.bluetooth.BluetotthCategory category -> l1l
    1:1:void <clinit>():12:12 -> <clinit>
    1:1:void <init>():10:10 -> <init>
    2:2:void <init>():18:18 -> <init>
    3:3:void <init>():22:22 -> <init>
    4:5:void <init>():27:28 -> <init>
    6:7:void <init>():33:34 -> <init>
    1:1:boolean equals(java.lang.Object):43:43 -> equals
    2:3:boolean equals(java.lang.Object):47:48 -> equals
    4:4:boolean equals(java.lang.Object):50:50 -> equals
    5:5:boolean equals(java.lang.Object):52:52 -> equals
    6:6:boolean equals(java.lang.Object):54:54 -> equals
    7:7:boolean equals(java.lang.Object):56:56 -> equals
    8:8:boolean equals(java.lang.Object):58:58 -> equals
    1:7:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):77:83 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):10:10 -> l1l
    1:7:com.mediatek.location.lppe.bluetooth.BluetoothMeasurement decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):88:94 -> ll1
    1:9:java.lang.String toString():64:72 -> toString
com.mediatek.location.lppe.bluetooth.BluetoothMeasurementRequest -> com.mediatek.location.lppe.bluetooth.l1l:
    boolean btleRtd -> lll
    com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement btleMultipleMeasurement -> ll1
    com.mediatek.location.lppe.bluetooth.BluetoothMeasurementRequest _instance -> l111
    com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement btMultipleMeasurement -> l11
    boolean btRtd -> l1l
    1:1:void <clinit>():12:12 -> <clinit>
    1:1:void <init>():10:10 -> <init>
    2:2:void <init>():18:18 -> <init>
    3:3:void <init>():22:22 -> <init>
    4:4:void <init>():27:27 -> <init>
    5:5:void <init>():31:31 -> <init>
    1:1:boolean equals(java.lang.Object):40:40 -> equals
    2:3:boolean equals(java.lang.Object):44:45 -> equals
    4:4:boolean equals(java.lang.Object):47:47 -> equals
    5:5:boolean equals(java.lang.Object):49:49 -> equals
    6:6:boolean equals(java.lang.Object):51:51 -> equals
    1:4:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):68:71 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):10:10 -> l1l
    1:5:com.mediatek.location.lppe.bluetooth.BluetoothMeasurementRequest decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):76:80 -> ll1
    1:7:java.lang.String toString():57:63 -> toString
com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement -> com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement:
    com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement requested -> ll1
    com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement _instance -> l111
    com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement end -> lll
    com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement forbidden -> l11
    com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement allowed -> l1l
    com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement[] $VALUES -> l11l
    1:4:void <clinit>():8:11 -> <clinit>
    5:5:void <clinit>():7:7 -> <clinit>
    6:6:void <clinit>():14:14 -> <clinit>
    1:1:void <init>(java.lang.String,int):7:7 -> <init>
    1:1:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):18:18 -> l11
    2:2:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):29:29 -> l11
    3:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):26:26 -> l11
    4:4:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):23:23 -> l11
    5:5:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):20:20 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:1:com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):38:38 -> ll1
    2:2:com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):47:47 -> ll1
    3:3:com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):45:45 -> ll1
    4:4:com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):43:43 -> ll1
    5:5:com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):41:41 -> ll1
    1:1:com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement valueOf(java.lang.String):7:7 -> valueOf
    1:1:com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement[] values():7:7 -> values
com.mediatek.location.lppe.bluetooth.BluetoothMultipleMeasurement$1 -> com.mediatek.location.lppe.bluetooth.ll1:
    int[] $SwitchMap$com$mediatek$location$lppe$bluetooth$BluetoothMultipleMeasurement -> l11
    1:1:void <clinit>():18:18 -> <clinit>
com.mediatek.location.lppe.bluetooth.BluetoothProvideCapabilities -> com.mediatek.location.lppe.bluetooth.lll:
    boolean btSupported -> l11
    boolean btGroup -> lll
    boolean btleAntennaPattern -> ll1l
    boolean btleRtd -> l1ll
    boolean btAntennaPattern -> l111
    boolean btleGroup -> ll11
    com.mediatek.location.lppe.bluetooth.BluetoothProvideCapabilities _instance -> lll1
    boolean btRtd -> ll1
    boolean btleRssi -> l1l1
    boolean btRssi -> l1l
    boolean btleSupported -> l11l
    1:1:void <clinit>():13:13 -> <clinit>
    1:1:void <init>():11:11 -> <init>
    2:4:void <init>():18:20 -> <init>
    5:5:void <init>():25:25 -> <init>
    6:6:void <init>():30:30 -> <init>
    7:9:void <init>():34:36 -> <init>
    10:10:void <init>():41:41 -> <init>
    11:11:void <init>():46:46 -> <init>
    1:1:boolean equals(java.lang.Object):55:55 -> equals
    2:3:boolean equals(java.lang.Object):59:60 -> equals
    4:4:boolean equals(java.lang.Object):62:62 -> equals
    5:5:boolean equals(java.lang.Object):64:64 -> equals
    6:6:boolean equals(java.lang.Object):66:66 -> equals
    7:7:boolean equals(java.lang.Object):68:68 -> equals
    8:8:boolean equals(java.lang.Object):70:70 -> equals
    9:9:boolean equals(java.lang.Object):72:72 -> equals
    10:10:boolean equals(java.lang.Object):74:74 -> equals
    11:11:boolean equals(java.lang.Object):76:76 -> equals
    12:12:boolean equals(java.lang.Object):78:78 -> equals
    1:10:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):101:110 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):11:11 -> l1l
    1:11:com.mediatek.location.lppe.bluetooth.BluetoothProvideCapabilities decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):115:125 -> ll1
    1:13:java.lang.String toString():84:96 -> toString
com.mediatek.location.lppe.bluetooth.BluetoothRTD -> com.mediatek.location.lppe.bluetooth.l111:
    int value -> l11
    short accuracy -> ll1
    com.mediatek.location.lppe.bluetooth.BluetoothRTD _instance -> lll
    com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit unit -> l1l
    1:1:void <clinit>():9:9 -> <clinit>
    1:1:void <init>():7:7 -> <init>
    2:3:void <init>():14:15 -> <init>
    4:4:void <init>():19:19 -> <init>
    1:1:boolean equals(java.lang.Object):28:28 -> equals
    2:3:boolean equals(java.lang.Object):32:33 -> equals
    4:4:boolean equals(java.lang.Object):35:35 -> equals
    5:5:boolean equals(java.lang.Object):37:37 -> equals
    1:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):53:55 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:4:com.mediatek.location.lppe.bluetooth.BluetoothRTD decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):60:63 -> ll1
    1:6:java.lang.String toString():43:48 -> toString
com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit -> com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit:
    com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit end -> l11l
    com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit nanoseconds -> lll
    com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit microseconds -> l11
    com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit tenthsOfNanoseconds -> l111
    com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit[] $VALUES -> l1ll
    com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit tensOfNanoseconds -> ll1
    com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit _instance -> l1l1
    com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit hundredsOfNanoseconds -> l1l
    1:6:void <clinit>():8:13 -> <clinit>
    7:7:void <clinit>() -> <clinit>
    8:8:void <clinit>():16:16 -> <clinit>
    1:1:void <init>(java.lang.String,int):7:7 -> <init>
    1:1:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):20:20 -> l11
    2:2:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):37:37 -> l11
    3:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):34:34 -> l11
    4:4:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):31:31 -> l11
    5:5:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):28:28 -> l11
    6:6:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):25:25 -> l11
    7:7:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):22:22 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:1:com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):46:46 -> ll1
    2:2:com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):59:59 -> ll1
    3:3:com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):57:57 -> ll1
    4:4:com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):55:55 -> ll1
    5:5:com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):53:53 -> ll1
    6:6:com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):51:51 -> ll1
    7:7:com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):49:49 -> ll1
    1:1:com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit valueOf(java.lang.String):7:7 -> valueOf
    1:1:com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit[] values():7:7 -> values
com.mediatek.location.lppe.bluetooth.BluetoothRTDUnit$1 -> com.mediatek.location.lppe.bluetooth.l11l:
    int[] $SwitchMap$com$mediatek$location$lppe$bluetooth$BluetoothRTDUnit -> l11
    1:1:void <clinit>():20:20 -> <clinit>
com.mediatek.location.lppe.bluetooth.BluetotthCategory -> com.mediatek.location.lppe.bluetooth.BluetotthCategory:
    com.mediatek.location.lppe.bluetooth.BluetotthCategory end -> lll
    com.mediatek.location.lppe.bluetooth.BluetotthCategory _instance -> l111
    com.mediatek.location.lppe.bluetooth.BluetotthCategory unknown -> l11
    com.mediatek.location.lppe.bluetooth.BluetotthCategory btle -> ll1
    com.mediatek.location.lppe.bluetooth.BluetotthCategory[] $VALUES -> l11l
    com.mediatek.location.lppe.bluetooth.BluetotthCategory bt -> l1l
    1:4:void <clinit>():8:11 -> <clinit>
    5:5:void <clinit>():7:7 -> <clinit>
    6:6:void <clinit>():14:14 -> <clinit>
    1:1:void <init>(java.lang.String,int):7:7 -> <init>
    1:1:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):18:18 -> l11
    2:2:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):29:29 -> l11
    3:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):26:26 -> l11
    4:4:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):23:23 -> l11
    5:5:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):20:20 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:1:com.mediatek.location.lppe.bluetooth.BluetotthCategory decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):38:38 -> ll1
    2:2:com.mediatek.location.lppe.bluetooth.BluetotthCategory decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):47:47 -> ll1
    3:3:com.mediatek.location.lppe.bluetooth.BluetotthCategory decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):45:45 -> ll1
    4:4:com.mediatek.location.lppe.bluetooth.BluetotthCategory decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):43:43 -> ll1
    5:5:com.mediatek.location.lppe.bluetooth.BluetotthCategory decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):41:41 -> ll1
    1:1:com.mediatek.location.lppe.bluetooth.BluetotthCategory valueOf(java.lang.String):7:7 -> valueOf
    1:1:com.mediatek.location.lppe.bluetooth.BluetotthCategory[] values():7:7 -> values
com.mediatek.location.lppe.bluetooth.BluetotthCategory$1 -> com.mediatek.location.lppe.bluetooth.l1l1:
    int[] $SwitchMap$com$mediatek$location$lppe$bluetooth$BluetotthCategory -> l11
    1:1:void <clinit>():18:18 -> <clinit>
com.mediatek.location.lppe.bluetooth.LPPeBluetooth$LPPeBluetoothReceiver -> com.mediatek.location.lppe.bluetooth.l1ll:
    1:1:void <init>():121:121 -> <init>
    1:3:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):151:153 -> l11
    4:4:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):182:182 -> l11
    5:6:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):177:178 -> l11
    7:7:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):173:173 -> l11
    8:10:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):167:169 -> l11
    11:13:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):161:163 -> l11
    14:15:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):156:157 -> l11
    void requestCapabilities(int) -> l111
    void startMeasurement(boolean,com.mediatek.location.lppe.bluetooth.BluetoothMeasurementRequest) -> l11l
    void provideCapabilities(int,com.mediatek.location.lppe.bluetooth.BluetoothProvideCapabilities) -> l1l
    void stopMeasurement() -> l1l1
    void provideMeasurement(com.mediatek.location.lppe.bluetooth.BluetoothMeasurement) -> ll1
    void provideMeasurementFinished() -> lll
com.mediatek.location.lppe.bluetooth.LPPeBluetooth$LPPeBluetoothSender -> com.mediatek.location.lppe.bluetooth.ll11:
    1:1:void <init>():28:28 -> <init>
    1:3:boolean provideCapabilities(com.mediatek.socket.base.UdpClient,int,com.mediatek.location.lppe.bluetooth.BluetoothProvideCapabilities):45:47 -> l11
    4:12:boolean provideCapabilities(com.mediatek.socket.base.UdpClient,int,com.mediatek.location.lppe.bluetooth.BluetoothProvideCapabilities):49:57 -> l11
    1:3:boolean provideMeasurement(com.mediatek.socket.base.UdpClient,com.mediatek.location.lppe.bluetooth.BluetoothMeasurement):91:93 -> l1l
    4:11:boolean provideMeasurement(com.mediatek.socket.base.UdpClient,com.mediatek.location.lppe.bluetooth.BluetoothMeasurement):95:102 -> l1l
    1:3:boolean provideMeasurementFinished(com.mediatek.socket.base.UdpClient):106:108 -> ll1
    4:10:boolean provideMeasurementFinished(com.mediatek.socket.base.UdpClient):110:116 -> ll1
com.mediatek.location.lppe.ipaddr.Bearer -> com.mediatek.location.lppe.ipaddr.Bearer:
    com.mediatek.location.lppe.ipaddr.Bearer lte -> lll
    com.mediatek.location.lppe.ipaddr.Bearer pktcable -> l1ll
    com.mediatek.location.lppe.ipaddr.Bearer _instance -> ll1l
    com.mediatek.location.lppe.ipaddr.Bearer wlan -> l111
    com.mediatek.location.lppe.ipaddr.Bearer other -> ll11
    com.mediatek.location.lppe.ipaddr.Bearer unknown -> l11
    com.mediatek.location.lppe.ipaddr.Bearer gsm -> l1l
    com.mediatek.location.lppe.ipaddr.Bearer wimax -> l11l
    com.mediatek.location.lppe.ipaddr.Bearer utran -> ll1
    com.mediatek.location.lppe.ipaddr.Bearer dsl -> l1l1
    com.mediatek.location.lppe.ipaddr.Bearer[] $VALUES -> lll1
    1:9:void <clinit>():8:16 -> <clinit>
    10:10:void <clinit>():7:7 -> <clinit>
    11:11:void <clinit>():19:19 -> <clinit>
    1:1:void <init>(java.lang.String,int):7:7 -> <init>
    1:1:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):23:23 -> l11
    2:2:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):49:49 -> l11
    3:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):46:46 -> l11
    4:4:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):43:43 -> l11
    5:5:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):40:40 -> l11
    6:6:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):37:37 -> l11
    7:7:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):34:34 -> l11
    8:8:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):31:31 -> l11
    9:9:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):28:28 -> l11
    10:10:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):25:25 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:1:com.mediatek.location.lppe.ipaddr.Bearer decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):58:58 -> ll1
    2:2:com.mediatek.location.lppe.ipaddr.Bearer decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):77:77 -> ll1
    3:3:com.mediatek.location.lppe.ipaddr.Bearer decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):75:75 -> ll1
    4:4:com.mediatek.location.lppe.ipaddr.Bearer decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):73:73 -> ll1
    5:5:com.mediatek.location.lppe.ipaddr.Bearer decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):71:71 -> ll1
    6:6:com.mediatek.location.lppe.ipaddr.Bearer decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):69:69 -> ll1
    7:7:com.mediatek.location.lppe.ipaddr.Bearer decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):67:67 -> ll1
    8:8:com.mediatek.location.lppe.ipaddr.Bearer decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):65:65 -> ll1
    9:9:com.mediatek.location.lppe.ipaddr.Bearer decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):63:63 -> ll1
    10:10:com.mediatek.location.lppe.ipaddr.Bearer decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):61:61 -> ll1
    1:1:com.mediatek.location.lppe.ipaddr.Bearer valueOf(java.lang.String):7:7 -> valueOf
    1:1:com.mediatek.location.lppe.ipaddr.Bearer[] values():7:7 -> values
com.mediatek.location.lppe.ipaddr.Bearer$1 -> com.mediatek.location.lppe.ipaddr.l11:
    int[] $SwitchMap$com$mediatek$location$lppe$ipaddr$Bearer -> l11
    1:1:void <clinit>():23:23 -> <clinit>
com.mediatek.location.lppe.ipaddr.IpAddress -> com.mediatek.location.lppe.ipaddr.l1l:
    com.mediatek.location.lppe.ipaddr.IpAddress _instance -> l1ll
    boolean ipv4Valid -> l11
    com.mediatek.location.lppe.ipaddr.Bearer bearer -> l111
    byte[] ipv6 -> lll
    boolean ipv6Valid -> ll1
    boolean nat -> l1l1
    boolean natValid -> l11l
    byte[] ipv4 -> l1l
    1:1:void <clinit>():12:12 -> <clinit>
    1:1:void <init>():10:10 -> <init>
    2:8:void <init>():14:20 -> <init>
    1:1:boolean equals(java.lang.Object):29:29 -> equals
    2:3:boolean equals(java.lang.Object):33:34 -> equals
    4:4:boolean equals(java.lang.Object):36:36 -> equals
    5:5:boolean equals(java.lang.Object):38:38 -> equals
    6:6:boolean equals(java.lang.Object):40:40 -> equals
    7:7:boolean equals(java.lang.Object):42:42 -> equals
    8:8:boolean equals(java.lang.Object):44:44 -> equals
    9:9:boolean equals(java.lang.Object):46:46 -> equals
    1:9:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):66:74 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):10:10 -> l1l
    1:8:com.mediatek.location.lppe.ipaddr.IpAddress decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):79:86 -> ll1
    1:3:com.mediatek.location.lppe.ipaddr.IpAddress[] getArray(com.mediatek.socket.base.SocketUtils$Codable[]):92:94 -> lll
    1:10:java.lang.String toString():52:61 -> toString
com.mediatek.location.lppe.ipaddr.IpAddressCapabilities -> com.mediatek.location.lppe.ipaddr.ll1:
    boolean ipv4 -> l11
    com.mediatek.location.lppe.ipaddr.IpAddressCapabilities _instance -> lll
    boolean nat -> ll1
    boolean ipv6 -> l1l
    1:1:void <clinit>():9:9 -> <clinit>
    1:1:void <init>():7:7 -> <init>
    2:2:void <init>():14:14 -> <init>
    3:3:void <init>():18:18 -> <init>
    4:4:void <init>():22:22 -> <init>
    1:1:boolean equals(java.lang.Object):31:31 -> equals
    2:3:boolean equals(java.lang.Object):35:36 -> equals
    4:4:boolean equals(java.lang.Object):38:38 -> equals
    5:5:boolean equals(java.lang.Object):40:40 -> equals
    1:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):56:58 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:4:com.mediatek.location.lppe.ipaddr.IpAddressCapabilities decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):63:66 -> ll1
    1:6:java.lang.String toString():46:51 -> toString
com.mediatek.location.lppe.ipaddr.IpAddressInformation -> com.mediatek.location.lppe.ipaddr.lll:
    com.mediatek.location.lppe.ipaddr.IpAddress[] list -> l11
    com.mediatek.location.lppe.ipaddr.IpAddressInformation _instance -> l1l
    1:1:void <clinit>():12:12 -> <clinit>
    1:1:void <init>():10:10 -> <init>
    2:2:void <init>():14:14 -> <init>
    1:1:boolean equals(java.lang.Object):23:23 -> equals
    2:3:boolean equals(java.lang.Object):27:28 -> equals
    1:2:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):42:43 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):10:10 -> l1l
    1:2:com.mediatek.location.lppe.ipaddr.IpAddressInformation decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):48:49 -> ll1
    1:4:java.lang.String toString():34:37 -> toString
com.mediatek.location.lppe.ipaddr.LPPeIpAddress$LPPeIpAddressReceiver -> com.mediatek.location.lppe.ipaddr.l111:
    1:1:void <init>():89:89 -> <init>
    1:3:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):115:117 -> l11
    4:5:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):135:136 -> l11
    6:6:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):131:131 -> l11
    7:9:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):125:127 -> l11
    10:11:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):120:121 -> l11
    void requestInformation() -> l111
    void provideCapabilities(int,com.mediatek.location.lppe.ipaddr.IpAddressCapabilities) -> l1l
    void provideInformation(com.mediatek.location.lppe.ipaddr.IpAddressInformation) -> ll1
    void requestCapabilities(int) -> lll
com.mediatek.location.lppe.ipaddr.LPPeIpAddress$LPPeIpAddressSender -> com.mediatek.location.lppe.ipaddr.l11l:
    1:1:void <init>():26:26 -> <init>
    1:3:boolean provideCapabilities(com.mediatek.socket.base.UdpClient,int,com.mediatek.location.lppe.ipaddr.IpAddressCapabilities):43:45 -> l11
    4:12:boolean provideCapabilities(com.mediatek.socket.base.UdpClient,int,com.mediatek.location.lppe.ipaddr.IpAddressCapabilities):47:55 -> l11
    1:3:boolean provideInformation(com.mediatek.socket.base.UdpClient,com.mediatek.location.lppe.ipaddr.IpAddressInformation):73:75 -> l1l
    4:11:boolean provideInformation(com.mediatek.socket.base.UdpClient,com.mediatek.location.lppe.ipaddr.IpAddressInformation):77:84 -> l1l
com.mediatek.location.lppe.lbs.LPPeLbs$LPPeLbsReceiver -> l1l.l11.l11.l11.l11.l11:
    1:1:void <init>():133:133 -> <init>
    1:3:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):163:165 -> l11
    4:5:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):194:195 -> l11
    6:7:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):189:190 -> l11
    8:9:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):184:185 -> l11
    10:11:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):179:180 -> l11
    12:14:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):173:175 -> l11
    15:16:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):168:169 -> l11
    void updateBatteryInfo(int) -> l111
    void updateNlpStatus(boolean) -> l11l
    void provideCapabilities(int,com.mediatek.location.lppe.lbs.LbsCapabilities) -> l1l
    void updateVowifiRegistration(int) -> l1l1
    void receiveSuplInit(byte[]) -> ll1
    void requestCapabilities(int) -> lll
com.mediatek.location.lppe.lbs.LPPeLbs$LPPeLbsSender -> l1l.l11.l11.l11.l11.l1l:
    1:1:void <init>():38:38 -> <init>
    1:3:boolean provideCapabilities(com.mediatek.socket.base.UdpClient,int,com.mediatek.location.lppe.lbs.LbsCapabilities):55:57 -> l11
    4:12:boolean provideCapabilities(com.mediatek.socket.base.UdpClient,int,com.mediatek.location.lppe.lbs.LbsCapabilities):59:67 -> l11
    1:3:boolean updateBatteryInfo(com.mediatek.socket.base.UdpClient,int):87:89 -> l1l
    4:11:boolean updateBatteryInfo(com.mediatek.socket.base.UdpClient,int):91:98 -> l1l
    1:3:boolean updateNlpStatus(com.mediatek.socket.base.UdpClient,boolean):102:104 -> ll1
    4:11:boolean updateNlpStatus(com.mediatek.socket.base.UdpClient,boolean):106:113 -> ll1
    1:3:boolean updateVowifiRegistration(com.mediatek.socket.base.UdpClient,int):117:119 -> lll
    4:11:boolean updateVowifiRegistration(com.mediatek.socket.base.UdpClient,int):121:128 -> lll
com.mediatek.location.lppe.lbs.LbsCapabilities -> l1l.l11.l11.l11.l11.ll1:
    boolean suplInitOverSms -> l11
    com.mediatek.location.lppe.lbs.LbsCapabilities _instance -> lll
    java.lang.String imei -> ll1
    boolean batteryInfo -> l1l
    1:1:void <clinit>():10:10 -> <clinit>
    1:1:void <init>():8:8 -> <init>
    2:4:void <init>():15:17 -> <init>
    1:1:boolean equals(java.lang.Object):26:26 -> equals
    2:3:boolean equals(java.lang.Object):30:31 -> equals
    4:4:boolean equals(java.lang.Object):33:33 -> equals
    5:5:boolean equals(java.lang.Object):35:35 -> equals
    1:4:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):51:54 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):8:8 -> l1l
    1:4:com.mediatek.location.lppe.lbs.LbsCapabilities decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):59:62 -> ll1
    1:6:java.lang.String toString():41:46 -> toString
com.mediatek.location.lppe.main.LPPeBootUpReceiver -> com.mediatek.location.lppe.main.LPPeBootUpReceiver:
    1:1:void <init>():8:8 -> <init>
    1:1:void log(java.lang.Object):23:23 -> l11
    1:5:void onReceive(android.content.Context,android.content.Intent):14:18 -> onReceive
com.mediatek.location.lppe.main.LPPeService -> com.mediatek.location.lppe.main.l111l:
    int mWifiState -> l1ll
    com.mediatek.location.lppe.bluetooth.LPPeBluetooth$LPPeBluetoothSender mBtSender -> llll
    android.content.Context mContext -> l11
    android.bluetooth.BluetoothManager mBtManager -> ll1l
    com.mediatek.socket.base.UdpServer mNetworkServer -> lll11
    java.lang.String LPPE_SOCKET_BT_CHANNEL -> ll1ll1
    com.mediatek.location.lppe.wlan.LPPeWlan$LPPeWlanSender mWifiSender -> l111
    long mWifiLastScanTime -> ll11
    boolean mNetworkSupported -> lll1l
    boolean mIsUncaliBarometer -> l1l1l
    com.mediatek.socket.base.UdpServer mWifiServer -> l11l
    android.location.LocationManager mLocationManager -> ll1l1
    boolean mDebugEnabled -> ll1
    java.lang.String LPPE_SOCKET_WLAN_CHANNEL -> ll1l1l
    java.lang.String LPPE_SOCKET_SENSOR_CHANNEL -> ll1lll
    com.mediatek.location.lppe.sensor.LPPeSensor$LPPeSensorSender mSensorSender -> ll111
    android.telecom.TelecomManager mTelecom -> l11l1l
    int mBtState -> l11l1
    int mNetworkCapabilityRecheckCount -> llll1
    java.lang.String LPPE_SOCKET_AGPS_CHANNEL -> ll11ll
    java.lang.String LPPE_SOCKET_IPADDR_CHANNEL -> lll11l
    long mSensorLastUpdateTime -> l11ll
    com.mediatek.socket.base.UdpServer mSensorServer -> ll11l
    java.lang.Object mLock -> l11lll
    com.mediatek.location.lppe.bluetooth.LPPeBluetooth$LPPeBluetoothReceiver mBtReceiver -> l1lll1
    com.mediatek.location.lppe.sensor.LPPeSensor$LPPeSensorReceiver mSensorReceiver -> l1llll
    android.os.Handler mHandler -> l1l11l
    int mLastBatteryPercentage -> l11l11
    int mVoWifiRegStatus -> l11ll1
    android.location.LocationListener mLocationListener -> l1ll11
    android.hardware.Sensor mTemperature -> l1lll
    com.mediatek.location.lppe.network.LPPeNetwork$LPPeNetworkReceiver mNetworkReceiver -> ll1111
    boolean mBtSettingState -> l111l
    android.net.wifi.WifiManager mWifiManager -> lll
    android.bluetooth.BluetoothAdapter mBtAdp -> lll1
    java.lang.String LPPE_SOCKET_NETWORK_CHANNEL -> lll111
    android.content.BroadcastReceiver mBroadcastReceiver -> l1l1l1
    com.mediatek.socket.base.UdpServer mBtServer -> l1111
    com.mediatek.socket.base.UdpClient mClient -> l1l
    com.mediatek.location.lppe.network.LPPeNetwork$LPPeNetworkSender mNetworkSender -> ll1ll
    com.mediatek.location.lppe.lbs.LPPeLbs$LPPeLbsReceiver mLbsReceiver -> ll11l1
    android.hardware.SensorEventListener mSensorBaroEventListener -> l1l1ll
    android.content.pm.PackageManager mPackageManager -> lllll
    com.mediatek.location.lppe.ipaddr.LPPeIpAddress$LPPeIpAddressSender mIpAddrSender -> l11111
    java.lang.String LPPE_SOCKET_LBS_CHANNEL -> lll1l1
    com.mediatek.socket.base.UdpServer mIpAddrServer -> l1111l
    java.util.ArrayList mVoWiFiRegHandlerList -> l1l111
    com.mediatek.location.lppe.ipaddr.LPPeIpAddress$LPPeIpAddressReceiver mIpAddrReceiver -> ll111l
    com.mediatek.location.lppe.main.LPPeService$LPPeServiceLogCallback mLogCallback -> ll1l11
    com.mediatek.socket.base.UdpServer mLbsServer -> l111ll
    boolean mWifiSettingState -> l1l1
    android.hardware.SensorManager mSensorManager -> l1l11
    com.mediatek.location.lppe.wlan.LPPeWlan$LPPeWlanReceiver mWifiReceiver -> l1ll1l
    android.hardware.Sensor mBarometer -> l1ll1
    com.mediatek.location.lppe.lbs.LPPeLbs$LPPeLbsSender mLbsSender -> l111l1
    1:1:void <init>(android.content.Context):225:225 -> <init>
    2:2:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):232:232 -> <init>
    3:3:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):137:137 -> <init>
    4:4:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):153:153 -> <init>
    5:6:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):156:157 -> <init>
    7:7:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):169:169 -> <init>
    8:8:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):172:172 -> <init>
    9:9:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):185:185 -> <init>
    10:10:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):197:197 -> <init>
    11:11:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):200:200 -> <init>
    12:12:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):207:207 -> <init>
    13:13:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):214:214 -> <init>
    14:14:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):216:216 -> <init>
    15:17:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):220:222 -> <init>
    18:18:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):388:388 -> <init>
    19:19:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):455:455 -> <init>
    20:20:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):495:495 -> <init>
    21:21:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):507:507 -> <init>
    22:22:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):526:526 -> <init>
    23:23:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):559:559 -> <init>
    24:24:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):599:599 -> <init>
    25:25:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):634:634 -> <init>
    26:26:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):676:676 -> <init>
    27:27:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):705:705 -> <init>
    28:28:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):233:233 -> <init>
    29:35:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):235:241 -> <init>
    36:36:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):244:244 -> <init>
    37:37:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):246:246 -> <init>
    38:38:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):250:250 -> <init>
    39:39:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):252:252 -> <init>
    40:40:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):254:254 -> <init>
    41:41:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):256:256 -> <init>
    42:42:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):261:261 -> <init>
    43:43:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):263:263 -> <init>
    44:44:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):265:265 -> <init>
    45:45:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):267:267 -> <init>
    46:47:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):270:271 -> <init>
    48:48:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):273:273 -> <init>
    49:49:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):296:296 -> <init>
    50:50:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):298:298 -> <init>
    51:51:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):300:300 -> <init>
    52:52:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):303:303 -> <init>
    53:54:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):305:306 -> <init>
    55:58:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):311:314 -> <init>
    59:63:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):316:320 -> <init>
    64:66:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):322:324 -> <init>
    67:67:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):326:326 -> <init>
    68:69:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):328:329 -> <init>
    70:70:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):331:331 -> <init>
    71:71:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):333:333 -> <init>
    72:72:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):335:335 -> <init>
    73:73:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):337:337 -> <init>
    74:74:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):339:339 -> <init>
    75:75:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):341:341 -> <init>
    76:81:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):344:349 -> <init>
    82:87:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):352:357 -> <init>
    88:88:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):359:359 -> <init>
    1:1:void access$000(com.mediatek.location.lppe.main.LPPeService):95:95 -> l11
    1:1:void access$1200(com.mediatek.location.lppe.main.LPPeService):95:95 -> l111
    1:1:void access$200(com.mediatek.location.lppe.main.LPPeService):95:95 -> l1111
    1:1:android.content.Context access$3400(com.mediatek.location.lppe.main.LPPeService):95:95 -> l11111
    1:4:void commonSendEventToHandlerWithDelay(int,int):756:759 -> l111111
    1:1:long getTick():1562:1562 -> l11111l
    1:1:void access$3500(com.mediatek.location.lppe.main.LPPeService,android.content.Context):95:95 -> l1111l
    1:1:boolean hasLocationPermission(java.lang.String):1794:1794 -> l1111l1
    1:5:void ipaddrProvideCapabilitiesHandler():1393:1397 -> l1111ll
    6:6:void ipaddrProvideCapabilitiesHandler():1399:1399 -> l1111ll
    1:1:void access$2000(com.mediatek.location.lppe.main.LPPeService,android.content.Intent):95:95 -> l111l
    1:1:void access$3600(com.mediatek.location.lppe.main.LPPeService,int,int):95:95 -> l111l1
    1:1:void ipaddrProvideInformationHandler():1490:1490 -> l111l11
    2:3:void ipaddrProvideInformationHandler():1492:1493 -> l111l11
    4:4:void ipaddrProvideInformationHandler():1495:1495 -> l111l11
    5:13:void ipaddrProvideInformationHandler():1498:1506 -> l111l11
    14:19:void ipaddrProvideInformationHandler():1508:1513 -> l111l11
    20:20:void ipaddrProvideInformationHandler():1515:1515 -> l111l11
    21:21:void ipaddrProvideInformationHandler():1519:1519 -> l111l11
    22:23:void ipaddrProvideInformationHandler():1524:1525 -> l111l11
    24:26:void ipaddrProvideInformationHandler():1527:1529 -> l111l11
    27:28:void ipaddrProvideInformationHandler():1531:1532 -> l111l11
    29:29:void ipaddrProvideInformationHandler():1535:1535 -> l111l11
    1:1:boolean isPackageInstalled(java.lang.String):1760:1760 -> l111l1l
    1:1:java.lang.Object access$3700(com.mediatek.location.lppe.main.LPPeService):95:95 -> l111ll
    1:2:boolean isWhitelistPackageNameSet():1747:1748 -> l111ll1
    3:4:boolean isWhitelistPackageNameSet():1750:1751 -> l111ll1
    1:6:void lbsBatteryChanged(android.content.Intent):1460:1465 -> l111lll
    7:9:void lbsBatteryChanged(android.content.Intent):1467:1469 -> l111lll
    1:1:void access$1300(com.mediatek.location.lppe.main.LPPeService):95:95 -> l11l
    1:1:void access$2100(com.mediatek.location.lppe.main.LPPeService,android.content.Intent):95:95 -> l11l1
    1:1:int access$3900(com.mediatek.location.lppe.main.LPPeService):95:95 -> l11l11
    1:3:void lbsBatteryForceUpdate():1442:1444 -> l11l111
    4:7:void lbsBatteryForceUpdate():1446:1449 -> l11l111
    8:9:void lbsBatteryForceUpdate():1451:1452 -> l11l111
    10:10:void lbsBatteryForceUpdate():1455:1455 -> l11l111
    1:1:void lbsNlpStatusChanged(android.content.Intent):1485:1485 -> l11l11l
    1:1:int access$3972(com.mediatek.location.lppe.main.LPPeService,int):95:95 -> l11l1l
    1:1:void lbsNlpStatusUpdate():1476:1476 -> l11l1l1
    2:4:void lbsNlpStatusUpdate():1478:1480 -> l11l1l1
    1:2:void lbsProvideCapabilitiesHandler():1405:1406 -> l11l1ll
    3:4:void lbsProvideCapabilitiesHandler():1408:1409 -> l11l1ll
    5:5:void lbsProvideCapabilitiesHandler():1411:1411 -> l11l1ll
    6:6:void lbsProvideCapabilitiesHandler():1416:1416 -> l11l1ll
    7:11:void lbsProvideCapabilitiesHandler():1419:1423 -> l11l1ll
    12:12:void lbsProvideCapabilitiesHandler():1425:1425 -> l11l1ll
    13:14:void lbsProvideCapabilitiesHandler():1427:1428 -> l11l1ll
    1:1:void access$2200(com.mediatek.location.lppe.main.LPPeService,android.content.Intent):95:95 -> l11ll
    1:1:int access$3976(com.mediatek.location.lppe.main.LPPeService,int):95:95 -> l11ll1
    1:2:java.lang.String loadProxyNameFromCarrierConfig():1768:1769 -> l11ll11
    3:5:java.lang.String loadProxyNameFromCarrierConfig():1774:1776 -> l11ll11
    6:7:java.lang.String loadProxyNameFromCarrierConfig():1778:1779 -> l11ll11
    8:9:java.lang.String loadProxyNameFromCarrierConfig():1782:1783 -> l11ll11
    10:10:java.lang.String loadProxyNameFromCarrierConfig():1785:1785 -> l11ll11
    11:11:java.lang.String loadProxyNameFromCarrierConfig():1787:1787 -> l11ll11
    1:3:void log(java.lang.Object):1541:1543 -> l11ll1l
    1:1:void access$400(com.mediatek.location.lppe.main.LPPeService):95:95 -> l11lll
    1:3:void loge(java.lang.Object):1548:1550 -> l11lll1
    1:2:void networkLocationChangedHandler(android.location.Location):1364:1365 -> l11llll
    3:15:void networkLocationChangedHandler(android.location.Location):1368:1380 -> l11llll
    16:19:void networkLocationChangedHandler(android.location.Location):1382:1385 -> l11llll
    20:21:void networkLocationChangedHandler(android.location.Location):1387:1388 -> l11llll
    1:1:void access$100(com.mediatek.location.lppe.main.LPPeService):95:95 -> l1l
    1:1:void access$1400(com.mediatek.location.lppe.main.LPPeService):95:95 -> l1l1
    1:1:void access$2300(com.mediatek.location.lppe.main.LPPeService,android.content.Intent):95:95 -> l1l11
    1:1:com.mediatek.socket.base.UdpClient access$4000(com.mediatek.location.lppe.main.LPPeService):95:95 -> l1l111
    1:1:void networkProvideCapabilitiesHandler():1294:1294 -> l1l1111
    2:2:void networkProvideCapabilitiesHandler():1296:1296 -> l1l1111
    1:5:void networkRecheckCapabilitiesHandler():1348:1352 -> l1l111l
    6:7:void networkRecheckCapabilitiesHandler():1354:1355 -> l1l111l
    8:8:void networkRecheckCapabilitiesHandler():1358:1358 -> l1l111l
    1:1:com.mediatek.location.lppe.lbs.LPPeLbs$LPPeLbsSender access$4100(com.mediatek.location.lppe.main.LPPeService):95:95 -> l1l11l
    1:1:void networkStartMeasurementHandler():1301:1301 -> l1l11l1
    2:3:void networkStartMeasurementHandler():1303:1304 -> l1l11l1
    4:4:void networkStartMeasurementHandler():1307:1307 -> l1l11l1
    5:5:void networkStartMeasurementHandler():1328:1328 -> l1l11l1
    6:6:void networkStartMeasurementHandler():1308:1308 -> l1l11l1
    7:8:void networkStartMeasurementHandler():1311:1312 -> l1l11l1
    9:10:void networkStartMeasurementHandler():1315:1316 -> l1l11l1
    11:11:void networkStartMeasurementHandler():1318:1318 -> l1l11l1
    12:12:void networkStartMeasurementHandler():1320:1320 -> l1l11l1
    13:15:void networkStartMeasurementHandler():1324:1326 -> l1l11l1
    16:16:void networkStartMeasurementHandler():1325:1325 -> l1l11l1
    17:17:void networkStartMeasurementHandler():1332:1332 -> l1l11l1
    1:5:void networkStopMeasurementHandler():1337:1341 -> l1l11ll
    6:6:void networkStopMeasurementHandler():1343:1343 -> l1l11ll
    1:1:void access$2400(com.mediatek.location.lppe.main.LPPeService,android.content.Intent):95:95 -> l1l1l
    1:1:void access$500(com.mediatek.location.lppe.main.LPPeService,com.mediatek.location.lppe.bluetooth.BluetoothMeasurementRequest):95:95 -> l1l1l1
    1:4:void registerVowifiStateChange(int):1892:1895 -> l1l1l11
    5:7:void registerVowifiStateChange(int):1900:1902 -> l1l1l11
    8:8:void registerVowifiStateChange(int):1904:1904 -> l1l1l11
    9:13:void registerVowifiStateChange(int):1908:1912 -> l1l1l11
    1:1:void removePackageInLocationSettingsWhitelist(android.content.Context):1718:1718 -> l1l1l1l
    2:2:void removePackageInLocationSettingsWhitelist(android.content.Context):1721:1721 -> l1l1l1l
    3:3:void removePackageInLocationSettingsWhitelist(android.content.Context):1720:1720 -> l1l1l1l
    4:4:void removePackageInLocationSettingsWhitelist(android.content.Context):1726:1726 -> l1l1l1l
    5:5:void removePackageInLocationSettingsWhitelist(android.content.Context):1728:1728 -> l1l1l1l
    6:6:void removePackageInLocationSettingsWhitelist(android.content.Context):1730:1730 -> l1l1l1l
    7:7:void removePackageInLocationSettingsWhitelist(android.content.Context):1732:1732 -> l1l1l1l
    8:8:void removePackageInLocationSettingsWhitelist(android.content.Context):1738:1738 -> l1l1l1l
    9:9:void removePackageInLocationSettingsWhitelist(android.content.Context):1740:1740 -> l1l1l1l
    10:10:void removePackageInLocationSettingsWhitelist(android.content.Context):1739:1739 -> l1l1l1l
    1:1:void access$600(com.mediatek.location.lppe.main.LPPeService):95:95 -> l1l1ll
    1:1:void sendDelayedMessage(int,long):1693:1693 -> l1l1ll1
    1:1:void sensorBaroAccuracyChangedHandler(android.hardware.Sensor,int):1253:1253 -> l1l1lll
    2:2:void sensorBaroAccuracyChangedHandler(android.hardware.Sensor,int):1271:1271 -> l1l1lll
    3:3:void sensorBaroAccuracyChangedHandler(android.hardware.Sensor,int):1256:1256 -> l1l1lll
    4:4:void sensorBaroAccuracyChangedHandler(android.hardware.Sensor,int):1259:1259 -> l1l1lll
    5:5:void sensorBaroAccuracyChangedHandler(android.hardware.Sensor,int):1262:1262 -> l1l1lll
    6:6:void sensorBaroAccuracyChangedHandler(android.hardware.Sensor,int):1265:1265 -> l1l1lll
    7:7:void sensorBaroAccuracyChangedHandler(android.hardware.Sensor,int):1268:1268 -> l1l1lll
    1:1:void access$1500(com.mediatek.location.lppe.main.LPPeService):95:95 -> l1ll
    1:1:void access$2500(com.mediatek.location.lppe.main.LPPeService,android.content.Intent):95:95 -> l1ll1
    1:1:void access$700(com.mediatek.location.lppe.main.LPPeService):95:95 -> l1ll11
    1:4:void sensorBaroSensorChangedHandler(android.hardware.SensorEvent):1278:1281 -> l1ll111
    5:8:void sensorBaroSensorChangedHandler(android.hardware.SensorEvent):1285:1288 -> l1ll111
    1:3:void sensorProvideCapabilitiesHandler():1215:1217 -> l1ll11l
    4:4:void sensorProvideCapabilitiesHandler():1219:1219 -> l1ll11l
    5:5:void sensorProvideCapabilitiesHandler():1221:1221 -> l1ll11l
    1:1:void access$800(com.mediatek.location.lppe.main.LPPeService,com.mediatek.location.lppe.sensor.SensorMeasurementRequest):95:95 -> l1ll1l
    1:4:void sensorStartMeasurementHandler(com.mediatek.location.lppe.sensor.SensorMeasurementRequest):1226:1229 -> l1ll1l1
    5:5:void sensorStartMeasurementHandler(com.mediatek.location.lppe.sensor.SensorMeasurementRequest):1232:1232 -> l1ll1l1
    6:7:void sensorStartMeasurementHandler(com.mediatek.location.lppe.sensor.SensorMeasurementRequest):1235:1236 -> l1ll1l1
    8:9:void sensorStartMeasurementHandler(com.mediatek.location.lppe.sensor.SensorMeasurementRequest):1238:1239 -> l1ll1l1
    1:3:void sensorStopMeasurementHandler():1244:1246 -> l1ll1ll
    4:4:void sensorStopMeasurementHandler():1248:1248 -> l1ll1ll
    1:1:void access$2600(com.mediatek.location.lppe.main.LPPeService,int):95:95 -> l1lll
    1:1:void access$900(com.mediatek.location.lppe.main.LPPeService):95:95 -> l1lll1
    1:1:boolean stringCompare(java.lang.String,java.lang.String):1556:1556 -> l1lll11
    1:1:void triggerNetworkRequestCapabilities():1630:1630 -> l1lll1l
    2:2:void triggerNetworkRequestCapabilities():1632:1632 -> l1lll1l
    1:1:void addPackageInLocationSettingsWhitelist(android.content.Context):1699:1699 -> l1llll
    2:2:void addPackageInLocationSettingsWhitelist(android.content.Context):1702:1702 -> l1llll
    3:3:void addPackageInLocationSettingsWhitelist(android.content.Context):1701:1701 -> l1llll
    4:7:void addPackageInLocationSettingsWhitelist(android.content.Context):1704:1707 -> l1llll
    8:8:void addPackageInLocationSettingsWhitelist(android.content.Context):1709:1709 -> l1llll
    9:9:void addPackageInLocationSettingsWhitelist(android.content.Context):1708:1708 -> l1llll
    1:1:void unRegisterVowifiStateChange():1916:1916 -> l1llll1
    2:2:void unRegisterVowifiStateChange():1918:1918 -> l1llll1
    1:1:void wifiCheckWifiStateAndScan():808:808 -> l1lllll
    2:6:void wifiCheckWifiStateAndScan():810:814 -> l1lllll
    7:10:void wifiCheckWifiStateAndScan():817:820 -> l1lllll
    1:1:void access$1000(com.mediatek.location.lppe.main.LPPeService):95:95 -> ll1
    1:1:void access$1600(com.mediatek.location.lppe.main.LPPeService):95:95 -> ll11
    1:1:void access$2700(com.mediatek.location.lppe.main.LPPeService,android.hardware.Sensor,int):95:95 -> ll111
    1:1:com.mediatek.location.lppe.bluetooth.BluetotthCategory btConvertTypeToCategory(int):1184:1184 -> ll1111
    2:2:com.mediatek.location.lppe.bluetooth.BluetotthCategory btConvertTypeToCategory(int):1182:1182 -> ll1111
    3:3:com.mediatek.location.lppe.bluetooth.BluetotthCategory btConvertTypeToCategory(int):1180:1180 -> ll1111
    4:4:com.mediatek.location.lppe.bluetooth.BluetotthCategory btConvertTypeToCategory(int):1178:1178 -> ll1111
    1:1:int wifiConvertFrequencyToChannelNumber(int):1007:1007 -> ll11111
    2:2:int wifiConvertFrequencyToChannelNumber(int):1010:1010 -> ll11111
    1:3:java.util.List wifiFilterScanResult(java.util.List,int):1018:1020 -> ll1111l
    4:4:java.util.List wifiFilterScanResult(java.util.List,int):1023:1023 -> ll1111l
    5:5:java.util.List wifiFilterScanResult(java.util.List,int):1026:1026 -> ll1111l
    1:2:void btDeviceFoundHandler(android.content.Intent):1152:1153 -> ll111l
    3:3:void btDeviceFoundHandler(android.content.Intent):1155:1155 -> ll111l
    4:4:void btDeviceFoundHandler(android.content.Intent):1157:1157 -> ll111l
    5:5:void btDeviceFoundHandler(android.content.Intent):1159:1159 -> ll111l
    6:7:void btDeviceFoundHandler(android.content.Intent):1162:1163 -> ll111l
    8:9:void btDeviceFoundHandler(android.content.Intent):1165:1166 -> ll111l
    10:11:void btDeviceFoundHandler(android.content.Intent):1169:1170 -> ll111l
    1:1:java.lang.String wifiGetMacAddr():1034:1034 -> ll111l1
    2:2:java.lang.String wifiGetMacAddr():1033:1033 -> ll111l1
    3:4:java.lang.String wifiGetMacAddr():1035:1036 -> ll111l1
    5:5:java.lang.String wifiGetMacAddr():1039:1039 -> ll111l1
    6:8:java.lang.String wifiGetMacAddr():1044:1046 -> ll111l1
    9:10:java.lang.String wifiGetMacAddr():1049:1050 -> ll111l1
    11:11:java.lang.String wifiGetMacAddr():1052:1052 -> ll111l1
    1:1:java.lang.String wifiGetServingBSSID():927:927 -> ll111ll
    2:2:java.lang.String wifiGetServingBSSID():929:929 -> ll111ll
    3:3:java.lang.String wifiGetServingBSSID():931:931 -> ll111ll
    1:1:void access$2800(com.mediatek.location.lppe.main.LPPeService,android.hardware.SensorEvent):95:95 -> ll11l
    1:4:void btDiscoveryFinishedHandler(android.content.Intent):1139:1142 -> ll11l1
    5:7:void btDiscoveryFinishedHandler(android.content.Intent):1144:1146 -> ll11l1
    1:8:void wifiProvideCapabilitiesHandler():792:799 -> ll11l11
    9:9:void wifiProvideCapabilitiesHandler():801:801 -> ll11l11
    10:10:void wifiProvideCapabilitiesHandler():803:803 -> ll11l11
    1:3:void wifiProvideMeasurementHandler(java.util.List):955:957 -> ll11l1l
    4:6:void wifiProvideMeasurementHandler(java.util.List):959:961 -> ll11l1l
    7:15:void wifiProvideMeasurementHandler(java.util.List):963:971 -> ll11l1l
    16:16:void wifiProvideMeasurementHandler(java.util.List):976:976 -> ll11l1l
    17:18:void wifiProvideMeasurementHandler(java.util.List):978:979 -> ll11l1l
    void btDiscoveryStartedHandler(android.content.Intent) -> ll11ll
    1:2:void wifiResumeScanHandler():910:911 -> ll11ll1
    3:3:void wifiResumeScanHandler():914:914 -> ll11ll1
    4:7:void wifiResumeScanHandler():918:921 -> ll11ll1
    1:1:void wifiScanResultDump(java.util.List):939:939 -> ll11lll
    2:8:void wifiScanResultDump(java.util.List):941:947 -> ll11lll
    1:1:void access$1700(java.lang.Object):95:95 -> ll1l
    1:1:void access$2900(com.mediatek.location.lppe.main.LPPeService,android.location.Location):95:95 -> ll1l1
    1:1:void btDumpDevice(android.content.Intent):1201:1201 -> ll1l11
    2:5:void btDumpDevice(android.content.Intent):1203:1206 -> ll1l11
    6:8:void btDumpDevice(android.content.Intent):1208:1208 -> ll1l11
    1:2:void wifiScanResultHandler(android.content.Intent):877:878 -> ll1l111
    3:3:void wifiScanResultHandler(android.content.Intent):881:881 -> ll1l111
    4:4:void wifiScanResultHandler(android.content.Intent):884:884 -> ll1l111
    5:5:void wifiScanResultHandler(android.content.Intent):888:888 -> ll1l111
    6:7:void wifiScanResultHandler(android.content.Intent):890:891 -> ll1l111
    8:8:void wifiScanResultHandler(android.content.Intent):893:893 -> ll1l111
    9:9:void wifiScanResultHandler(android.content.Intent):895:895 -> ll1l111
    10:12:void wifiScanResultHandler(android.content.Intent):897:899 -> ll1l111
    13:16:void wifiScanResultHandler(android.content.Intent):901:904 -> ll1l111
    1:2:void wifiStartMeasurementHandler():826:827 -> ll1l11l
    3:4:void wifiStartMeasurementHandler():830:831 -> ll1l11l
    5:5:void wifiStartMeasurementHandler():836:836 -> ll1l11l
    java.lang.String btGetDevTypeString(int) -> ll1l1l
    1:2:void wifiStateChangedHandler(android.content.Intent):859:860 -> ll1l1l1
    3:3:void wifiStateChangedHandler(android.content.Intent):863:863 -> ll1l1l1
    4:9:void wifiStateChangedHandler(android.content.Intent):865:870 -> ll1l1l1
    1:2:void wifiStopMeasurementHandler():840:841 -> ll1l1ll
    3:4:void wifiStopMeasurementHandler():844:845 -> ll1l1ll
    5:10:void wifiStopMeasurementHandler():848:853 -> ll1l1ll
    1:1:void access$300(com.mediatek.location.lppe.main.LPPeService):95:95 -> ll1ll
    1:6:void btProvideCapabilitiesHandler():1060:1065 -> ll1ll1
    7:8:void btProvideCapabilitiesHandler():1067:1068 -> ll1ll1
    1:2:void btStartMeasurementHandler(com.mediatek.location.lppe.bluetooth.BluetoothMeasurementRequest):1073:1074 -> ll1lll
    3:4:void btStartMeasurementHandler(com.mediatek.location.lppe.bluetooth.BluetoothMeasurementRequest):1077:1078 -> ll1lll
    5:11:void btStartMeasurementHandler(com.mediatek.location.lppe.bluetooth.BluetoothMeasurementRequest):1081:1087 -> ll1lll
    12:15:void btStartMeasurementHandler(com.mediatek.location.lppe.bluetooth.BluetoothMeasurementRequest):1090:1093 -> ll1lll
    1:1:void access$1100(com.mediatek.location.lppe.main.LPPeService):95:95 -> lll
    1:1:void access$1800(com.mediatek.location.lppe.main.LPPeService,android.content.Intent):95:95 -> lll1
    1:1:void access$3000(java.lang.Object):95:95 -> lll11
    1:2:void btStateChangedHandler(android.content.Intent):1119:1120 -> lll111
    3:8:void btStateChangedHandler(android.content.Intent):1123:1128 -> lll111
    1:2:void btStopMeasurementHandler():1099:1100 -> lll11l
    3:4:void btStopMeasurementHandler():1103:1104 -> lll11l
    5:11:void btStopMeasurementHandler():1107:1113 -> lll11l
    1:1:void access$3100(com.mediatek.location.lppe.main.LPPeService,int):95:95 -> lll1l
    1:5:boolean checkLocationProxyAppPermission():1799:1803 -> lll1l1
    6:6:boolean checkLocationProxyAppPermission():1807:1807 -> lll1l1
    7:7:boolean checkLocationProxyAppPermission():1810:1810 -> lll1l1
    1:8:void cleanup():367:374 -> lll1ll
    9:10:void cleanup():376:377 -> lll1ll
    11:12:void cleanup():379:380 -> lll1ll
    13:14:void cleanup():382:383 -> lll1ll
    15:15:void cleanup():385:385 -> lll1ll
    1:1:void access$1900(com.mediatek.location.lppe.main.LPPeService,android.content.Intent):95:95 -> llll
    1:1:void access$3200(com.mediatek.location.lppe.main.LPPeService,int,java.lang.Object):95:95 -> llll1
    int commonGetMaxBuffSize() -> llll11
    1:1:byte[] commonMacStringToByteArray(java.lang.String):783:783 -> llll1l
    2:2:byte[] commonMacStringToByteArray(java.lang.String):786:786 -> llll1l
    1:1:android.telecom.TelecomManager access$3300(com.mediatek.location.lppe.main.LPPeService):95:95 -> lllll
    1:1:void commonSendEventToHandler(int):745:745 -> lllll1
    1:4:void commonSendEventToHandler(int,java.lang.Object):749:752 -> llllll
com.mediatek.location.lppe.main.LPPeService$1 -> com.mediatek.location.lppe.main.l1l:
    com.mediatek.location.lppe.main.LPPeService this$0 -> l11
    1:1:void <init>(com.mediatek.location.lppe.main.LPPeService):388:388 -> <init>
    1:1:void handleMessage(android.os.Message):390:390 -> handleMessage
    2:2:void handleMessage(android.os.Message):449:449 -> handleMessage
    3:3:void handleMessage(android.os.Message):435:435 -> handleMessage
    4:4:void handleMessage(android.os.Message):432:432 -> handleMessage
    5:5:void handleMessage(android.os.Message):429:429 -> handleMessage
    6:6:void handleMessage(android.os.Message):426:426 -> handleMessage
    7:7:void handleMessage(android.os.Message):422:422 -> handleMessage
    8:8:void handleMessage(android.os.Message):419:419 -> handleMessage
    9:9:void handleMessage(android.os.Message):416:416 -> handleMessage
    10:10:void handleMessage(android.os.Message):412:412 -> handleMessage
    11:11:void handleMessage(android.os.Message):409:409 -> handleMessage
    12:12:void handleMessage(android.os.Message):406:406 -> handleMessage
    13:13:void handleMessage(android.os.Message):402:402 -> handleMessage
    14:14:void handleMessage(android.os.Message):399:399 -> handleMessage
    15:15:void handleMessage(android.os.Message):396:396 -> handleMessage
    16:16:void handleMessage(android.os.Message):393:393 -> handleMessage
    17:17:void handleMessage(android.os.Message):446:446 -> handleMessage
    18:18:void handleMessage(android.os.Message):442:442 -> handleMessage
    19:19:void handleMessage(android.os.Message):439:439 -> handleMessage
com.mediatek.location.lppe.main.LPPeService$10 -> com.mediatek.location.lppe.main.l11:
    com.mediatek.location.lppe.main.LPPeService this$0 -> l11
    1:1:void <init>(com.mediatek.location.lppe.main.LPPeService):705:705 -> <init>
    1:1:void updateBatteryInfo(int):729:729 -> l111
    1:1:void updateNlpStatus(boolean):735:735 -> l11l
    1:1:void provideCapabilities(int,com.mediatek.location.lppe.lbs.LbsCapabilities):717:717 -> l1l
    1:1:void updateVowifiRegistration(int):740:740 -> l1l1
    1:1:void receiveSuplInit(byte[]):723:723 -> ll1
    1:1:void requestCapabilities(int):708:708 -> lll
    2:2:void requestCapabilities(int):710:710 -> lll
com.mediatek.location.lppe.main.LPPeService$2 -> com.mediatek.location.lppe.main.ll1:
    com.mediatek.location.lppe.main.LPPeService this$0 -> l11
    1:1:void <init>(com.mediatek.location.lppe.main.LPPeService):455:455 -> <init>
    1:1:void onReceive(android.content.Context,android.content.Intent):458:458 -> onReceive
    2:5:void onReceive(android.content.Context,android.content.Intent):460:463 -> onReceive
    6:9:void onReceive(android.content.Context,android.content.Intent):466:469 -> onReceive
    10:13:void onReceive(android.content.Context,android.content.Intent):471:474 -> onReceive
    14:17:void onReceive(android.content.Context,android.content.Intent):477:480 -> onReceive
    18:20:void onReceive(android.content.Context,android.content.Intent):483:485 -> onReceive
    21:21:void onReceive(android.content.Context,android.content.Intent):489:489 -> onReceive
com.mediatek.location.lppe.main.LPPeService$3 -> com.mediatek.location.lppe.main.lll:
    com.mediatek.location.lppe.main.LPPeService this$0 -> l11
    1:1:void <init>(com.mediatek.location.lppe.main.LPPeService):495:495 -> <init>
    1:1:void onAccuracyChanged(android.hardware.Sensor,int):498:498 -> onAccuracyChanged
    1:1:void onSensorChanged(android.hardware.SensorEvent):503:503 -> onSensorChanged
com.mediatek.location.lppe.main.LPPeService$4 -> com.mediatek.location.lppe.main.l111:
    com.mediatek.location.lppe.main.LPPeService this$0 -> l11
    1:1:void <init>(com.mediatek.location.lppe.main.LPPeService):507:507 -> <init>
    1:1:void onLocationChanged(android.location.Location):510:510 -> onLocationChanged
com.mediatek.location.lppe.main.LPPeService$5 -> com.mediatek.location.lppe.main.l11l:
    com.mediatek.location.lppe.main.LPPeService this$0 -> l11
    1:1:void <init>(com.mediatek.location.lppe.main.LPPeService):526:526 -> <init>
    1:1:void startMeasurement(boolean,com.mediatek.location.lppe.wlan.WlanMeasurements):544:544 -> l111
    1:1:void stopMeasurement():549:549 -> l11l
    1:1:void provideCapabilities(int,com.mediatek.location.lppe.wlan.WlanProvideCapabilities):538:538 -> l1l
    1:1:void provideMeasurement(com.mediatek.location.lppe.wlan.WlanProvideMeasurement):555:555 -> ll1
    1:1:void requestCapabilities(int):529:529 -> lll
    2:2:void requestCapabilities(int):531:531 -> lll
com.mediatek.location.lppe.main.LPPeService$6 -> com.mediatek.location.lppe.main.l1l1:
    com.mediatek.location.lppe.main.LPPeService this$0 -> l11
    1:1:void <init>(com.mediatek.location.lppe.main.LPPeService):559:559 -> <init>
    1:1:void requestCapabilities(int):562:562 -> l111
    2:2:void requestCapabilities(int):564:564 -> l111
    1:1:void startMeasurement(boolean,com.mediatek.location.lppe.bluetooth.BluetoothMeasurementRequest):578:578 -> l11l
    1:1:void provideCapabilities(int,com.mediatek.location.lppe.bluetooth.BluetoothProvideCapabilities):571:571 -> l1l
    1:1:void stopMeasurement():583:583 -> l1l1
    1:1:void provideMeasurement(com.mediatek.location.lppe.bluetooth.BluetoothMeasurement):589:589 -> ll1
    1:1:void provideMeasurementFinished():595:595 -> lll
com.mediatek.location.lppe.main.LPPeService$7 -> com.mediatek.location.lppe.main.l1ll:
    com.mediatek.location.lppe.main.LPPeService this$0 -> l11
    1:1:void <init>(com.mediatek.location.lppe.main.LPPeService):599:599 -> <init>
    1:1:void startMeasurement(com.mediatek.location.lppe.sensor.SensorMeasurementRequest):618:618 -> l111
    1:1:void stopMeasurement():623:623 -> l11l
    1:1:void provideCapabilities(int,com.mediatek.location.lppe.sensor.SensorProvideCapabilities):611:611 -> l1l
    1:1:void providePressureMeasurement(com.mediatek.location.lppe.sensor.SensorPressureMeasurement):629:629 -> ll1
    1:1:void requestCapabilities(int):602:602 -> lll
    2:2:void requestCapabilities(int):604:604 -> lll
com.mediatek.location.lppe.main.LPPeService$8 -> com.mediatek.location.lppe.main.ll11:
    com.mediatek.location.lppe.main.LPPeService this$0 -> l11
    1:1:void <init>(com.mediatek.location.lppe.main.LPPeService):634:634 -> <init>
    1:2:void startMeasurement():653:654 -> l111
    3:3:void startMeasurement():656:656 -> l111
    4:4:void startMeasurement():660:660 -> l111
    1:1:void stopMeasurement():665:665 -> l11l
    1:1:void provideCapabilities(int,boolean):646:646 -> l1l
    1:1:void provideMeasurement(com.mediatek.location.lppe.network.NetworkLocationMeasurement):671:671 -> ll1
    1:1:void requestCapabilities(int):637:637 -> lll
    2:2:void requestCapabilities(int):639:639 -> lll
com.mediatek.location.lppe.main.LPPeService$9 -> com.mediatek.location.lppe.main.ll1l:
    com.mediatek.location.lppe.main.LPPeService this$0 -> l11
    1:1:void <init>(com.mediatek.location.lppe.main.LPPeService):676:676 -> <init>
    1:1:void requestInformation():693:693 -> l111
    1:1:void provideCapabilities(int,com.mediatek.location.lppe.ipaddr.IpAddressCapabilities):688:688 -> l1l
    1:1:void provideInformation(com.mediatek.location.lppe.ipaddr.IpAddressInformation):700:700 -> ll1
    1:1:void requestCapabilities(int):679:679 -> lll
    2:2:void requestCapabilities(int):681:681 -> lll
com.mediatek.location.lppe.main.LPPeService$LPPeServiceLogCallback -> com.mediatek.location.lppe.main.lll1:
    void onLog(boolean,java.lang.String) -> l11
com.mediatek.location.lppe.main.LPPeService$VoWiFiRegHandler -> com.mediatek.location.lppe.main.l1111:
    int mPhoneId -> l11
    boolean mImsIsRegistered -> lll
    com.android.ims.ImsManager mImsManager -> l1l
    int mImsRadioTech -> ll1
    com.mediatek.location.lppe.main.LPPeService this$0 -> l11l
    android.telephony.ims.ImsMmTelManager$RegistrationCallback mRegistrationCallback -> l111
    1:1:void <init>(com.mediatek.location.lppe.main.LPPeService):1815:1815 -> <init>
    2:2:void <init>(com.mediatek.location.lppe.main.LPPeService):1837:1837 -> <init>
    3:3:void <init>(com.mediatek.location.lppe.main.LPPeService,com.mediatek.location.lppe.main.LPPeService$1):1815:1815 -> <init>
    1:1:void access$3800(com.mediatek.location.lppe.main.LPPeService$VoWiFiRegHandler):1815:1815 -> l11
    1:2:void unRegisterForImsStateChange():1833:1834 -> l111
    1:1:void access$4300(com.mediatek.location.lppe.main.LPPeService$VoWiFiRegHandler):1815:1815 -> l1l
    1:1:void handleImsCapabilityChange():1873:1873 -> ll1
    2:2:void handleImsCapabilityChange():1875:1875 -> ll1
    3:3:void handleImsCapabilityChange():1877:1877 -> ll1
    4:4:void handleImsCapabilityChange():1880:1880 -> ll1
    5:5:void handleImsCapabilityChange():1883:1883 -> ll1
    6:6:void handleImsCapabilityChange():1880:1880 -> ll1
    7:8:void handleImsCapabilityChange():1885:1886 -> ll1
    1:1:void registerForImsStateChange():1822:1822 -> lll
    2:3:void registerForImsStateChange():1824:1825 -> lll
    4:4:void registerForImsStateChange():1828:1828 -> lll
com.mediatek.location.lppe.main.LPPeService$VoWiFiRegHandler$1 -> com.mediatek.location.lppe.main.llll:
    com.mediatek.location.lppe.main.LPPeService$VoWiFiRegHandler this$1 -> l11
    1:1:void <init>(com.mediatek.location.lppe.main.LPPeService$VoWiFiRegHandler):1838:1838 -> <init>
    1:6:void onRegistered(int):1842:1847 -> onRegistered
    1:1:void onRegistering(int):1853:1853 -> onRegistering
    2:5:void onRegistering(int):1855:1858 -> onRegistering
    1:6:void onUnregistered(android.telephony.ims.ImsReasonInfo):1863:1868 -> onUnregistered
com.mediatek.location.lppe.main.LPPeServiceApplication -> com.mediatek.location.lppe.main.LPPeServiceApplication:
    1:1:void <init>():12:12 -> <init>
    1:1:void onCreate():17:17 -> onCreate
    1:1:void onTerminate():28:28 -> onTerminate
com.mediatek.location.lppe.main.LPPeServiceWrapper -> com.mediatek.location.lppe.main.LPPeServiceWrapper:
    com.mediatek.location.lppe.main.LPPeService mLppe -> l11
    1:1:void <init>():15:15 -> <init>
    2:2:void <init>():12:12 -> <init>
    1:1:void log(java.lang.Object):52:52 -> l11
    1:3:void onCreate():25:27 -> onCreate
    4:5:void onCreate():29:30 -> onCreate
    6:6:void onCreate():32:32 -> onCreate
    1:4:void onDestroy():44:47 -> onDestroy
    1:1:void onStart(android.content.Intent,int):39:39 -> onStart
com.mediatek.location.lppe.network.LPPeNetwork$LPPeNetworkReceiver -> l1l.l11.l11.l11.l1l.l11:
    1:1:void <init>():104:104 -> <init>
    1:3:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):132:134 -> l11
    4:5:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):156:157 -> l11
    6:6:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):152:152 -> l11
    7:7:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):148:148 -> l11
    8:10:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):142:144 -> l11
    11:12:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):137:138 -> l11
    void startMeasurement() -> l111
    void stopMeasurement() -> l11l
    void provideCapabilities(int,boolean) -> l1l
    void provideMeasurement(com.mediatek.location.lppe.network.NetworkLocationMeasurement) -> ll1
    void requestCapabilities(int) -> lll
com.mediatek.location.lppe.network.LPPeNetwork$LPPeNetworkSender -> l1l.l11.l11.l11.l1l.l1l:
    1:1:void <init>():27:27 -> <init>
    1:3:boolean provideCapabilities(com.mediatek.socket.base.UdpClient,int,boolean):44:46 -> l11
    4:12:boolean provideCapabilities(com.mediatek.socket.base.UdpClient,int,boolean):48:56 -> l11
    1:3:boolean provideMeasurement(com.mediatek.socket.base.UdpClient,com.mediatek.location.lppe.network.NetworkLocationMeasurement):88:90 -> l1l
    4:11:boolean provideMeasurement(com.mediatek.socket.base.UdpClient,com.mediatek.location.lppe.network.NetworkLocationMeasurement):92:99 -> l1l
    1:3:boolean requestCapabilities(com.mediatek.socket.base.UdpClient,int):29:31 -> ll1
    4:11:boolean requestCapabilities(com.mediatek.socket.base.UdpClient,int):33:40 -> ll1
com.mediatek.location.lppe.network.NetworkLocationMeasurement -> l1l.l11.l11.l11.l1l.ll1:
    double latitude -> l1l
    double altitude -> l1l1
    boolean confidenceHorizontalValid -> l1ll
    boolean verticalAccuracyValid -> llll
    double longitude -> ll1
    boolean altitudeValid -> l11l
    int locationSource -> lll1
    float accuracy -> l111
    boolean confidenceVerticalValid -> l111l
    boolean accuracyValid -> lll
    boolean locationSourceValid -> ll1l
    byte confidenceVertical -> l11l1
    long time -> l11
    com.mediatek.location.lppe.network.NetworkLocationMeasurement _instance -> l11ll
    float verticalAccuracy -> l1111
    byte confidenceHorizontal -> ll11
    1:1:void <clinit>():9:9 -> <clinit>
    1:1:void <init>():7:7 -> <init>
    2:2:void <init>():14:14 -> <init>
    3:3:void <init>():18:18 -> <init>
    4:4:void <init>():22:22 -> <init>
    5:6:void <init>():26:27 -> <init>
    7:8:void <init>():31:32 -> <init>
    9:10:void <init>():36:37 -> <init>
    11:12:void <init>():48:49 -> <init>
    13:14:void <init>():53:54 -> <init>
    15:16:void <init>():58:59 -> <init>
    1:1:boolean equals(java.lang.Object):68:68 -> equals
    2:3:boolean equals(java.lang.Object):72:73 -> equals
    4:4:boolean equals(java.lang.Object):75:75 -> equals
    5:5:boolean equals(java.lang.Object):77:77 -> equals
    6:6:boolean equals(java.lang.Object):79:79 -> equals
    7:7:boolean equals(java.lang.Object):81:81 -> equals
    8:8:boolean equals(java.lang.Object):83:83 -> equals
    9:9:boolean equals(java.lang.Object):85:85 -> equals
    10:10:boolean equals(java.lang.Object):87:87 -> equals
    11:11:boolean equals(java.lang.Object):89:89 -> equals
    12:12:boolean equals(java.lang.Object):91:91 -> equals
    13:13:boolean equals(java.lang.Object):93:93 -> equals
    14:14:boolean equals(java.lang.Object):95:95 -> equals
    15:15:boolean equals(java.lang.Object):97:97 -> equals
    16:16:boolean equals(java.lang.Object):99:99 -> equals
    17:17:boolean equals(java.lang.Object):101:101 -> equals
    1:15:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):129:143 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:16:com.mediatek.location.lppe.network.NetworkLocationMeasurement decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):148:163 -> ll1
    1:18:java.lang.String toString():107:124 -> toString
com.mediatek.location.lppe.sensor.LPPeSensor$LPPeSensorReceiver -> l1l.l11.l11.l11.ll1.l11:
    1:1:void <init>():105:105 -> <init>
    1:3:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):133:135 -> l11
    4:5:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):158:159 -> l11
    6:6:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):154:154 -> l11
    7:8:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):149:150 -> l11
    9:11:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):143:145 -> l11
    12:13:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):138:139 -> l11
    void startMeasurement(com.mediatek.location.lppe.sensor.SensorMeasurementRequest) -> l111
    void stopMeasurement() -> l11l
    void provideCapabilities(int,com.mediatek.location.lppe.sensor.SensorProvideCapabilities) -> l1l
    void providePressureMeasurement(com.mediatek.location.lppe.sensor.SensorPressureMeasurement) -> ll1
    void requestCapabilities(int) -> lll
com.mediatek.location.lppe.sensor.LPPeSensor$LPPeSensorSender -> l1l.l11.l11.l11.ll1.l1l:
    1:1:void <init>():27:27 -> <init>
    1:3:boolean provideCapabilities(com.mediatek.socket.base.UdpClient,int,com.mediatek.location.lppe.sensor.SensorProvideCapabilities):44:46 -> l11
    4:12:boolean provideCapabilities(com.mediatek.socket.base.UdpClient,int,com.mediatek.location.lppe.sensor.SensorProvideCapabilities):48:56 -> l11
    1:3:boolean providePressureMeasurement(com.mediatek.socket.base.UdpClient,com.mediatek.location.lppe.sensor.SensorPressureMeasurement):89:91 -> l1l
    4:11:boolean providePressureMeasurement(com.mediatek.socket.base.UdpClient,com.mediatek.location.lppe.sensor.SensorPressureMeasurement):93:100 -> l1l
com.mediatek.location.lppe.sensor.SensorMeasurementRequest -> l1l.l11.l11.l11.ll1.ll1:
    boolean motionStateReq -> l11
    boolean atmosphericPressureReq -> ll1
    com.mediatek.location.lppe.sensor.SensorMeasurementRequest _instance -> lll
    boolean secondaryMotionStateRequest -> l1l
    1:1:void <clinit>():9:9 -> <clinit>
    1:1:void <init>():7:7 -> <init>
    2:2:void <init>():14:14 -> <init>
    3:3:void <init>():18:18 -> <init>
    4:4:void <init>():22:22 -> <init>
    1:1:boolean equals(java.lang.Object):31:31 -> equals
    2:3:boolean equals(java.lang.Object):35:36 -> equals
    4:4:boolean equals(java.lang.Object):38:38 -> equals
    5:5:boolean equals(java.lang.Object):40:40 -> equals
    1:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):56:58 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:4:com.mediatek.location.lppe.sensor.SensorMeasurementRequest decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):63:66 -> ll1
    1:6:java.lang.String toString():46:51 -> toString
com.mediatek.location.lppe.sensor.SensorPressureMeasurement -> l1l.l11.l11.l11.ll1.lll:
    int sensorMeasurement -> l11
    boolean uncertaintyRangeValid -> lll
    short adjustment -> ll1
    short temperature -> ll11
    byte uncertaintyConfidence -> l1l1
    boolean temperatureValid -> l1ll
    short uncertaintyRange -> l111
    com.mediatek.location.lppe.sensor.SensorPressureMeasurement _instance -> ll1l
    boolean adjustmentValid -> l1l
    boolean uncertaintyConfidenceValid -> l11l
    1:1:void <clinit>():9:9 -> <clinit>
    1:1:void <init>():7:7 -> <init>
    2:2:void <init>():16:16 -> <init>
    3:4:void <init>():23:24 -> <init>
    5:6:void <init>():32:33 -> <init>
    7:8:void <init>():37:38 -> <init>
    9:10:void <init>():46:47 -> <init>
    1:1:boolean equals(java.lang.Object):56:56 -> equals
    2:3:boolean equals(java.lang.Object):60:61 -> equals
    4:4:boolean equals(java.lang.Object):63:63 -> equals
    5:5:boolean equals(java.lang.Object):65:65 -> equals
    6:6:boolean equals(java.lang.Object):67:67 -> equals
    7:7:boolean equals(java.lang.Object):69:69 -> equals
    8:8:boolean equals(java.lang.Object):71:71 -> equals
    9:9:boolean equals(java.lang.Object):73:73 -> equals
    10:10:boolean equals(java.lang.Object):75:75 -> equals
    11:11:boolean equals(java.lang.Object):77:77 -> equals
    1:9:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):99:107 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:10:com.mediatek.location.lppe.sensor.SensorPressureMeasurement decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):112:121 -> ll1
    1:12:java.lang.String toString():83:94 -> toString
com.mediatek.location.lppe.sensor.SensorProvideCapabilities -> l1l.l11.l11.l11.ll1.l111:
    boolean motionStateSupport -> l11
    boolean atmosphericPressureSupport -> lll
    boolean atmosphericPressureADSupport -> ll1
    com.mediatek.location.lppe.sensor.SensorProvideCapabilities _instance -> l111
    boolean secondarySupport -> l1l
    1:1:void <clinit>():9:9 -> <clinit>
    1:1:void <init>():7:7 -> <init>
    2:2:void <init>():14:14 -> <init>
    3:3:void <init>():18:18 -> <init>
    4:4:void <init>():22:22 -> <init>
    5:5:void <init>():26:26 -> <init>
    1:1:boolean equals(java.lang.Object):35:35 -> equals
    2:3:boolean equals(java.lang.Object):39:40 -> equals
    4:4:boolean equals(java.lang.Object):42:42 -> equals
    5:5:boolean equals(java.lang.Object):44:44 -> equals
    6:6:boolean equals(java.lang.Object):46:46 -> equals
    1:4:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):63:66 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:5:com.mediatek.location.lppe.sensor.SensorProvideCapabilities decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):71:75 -> ll1
    1:7:java.lang.String toString():52:58 -> toString
com.mediatek.location.lppe.wlan.LPPeWlan$LPPeWlanReceiver -> com.mediatek.location.lppe.wlan.l11:
    1:1:void <init>():106:106 -> <init>
    1:3:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):134:136 -> l11
    4:5:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):160:161 -> l11
    6:6:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):156:156 -> l11
    7:9:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):150:152 -> l11
    10:12:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):144:146 -> l11
    13:14:boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface):139:140 -> l11
    void startMeasurement(boolean,com.mediatek.location.lppe.wlan.WlanMeasurements) -> l111
    void stopMeasurement() -> l11l
    void provideCapabilities(int,com.mediatek.location.lppe.wlan.WlanProvideCapabilities) -> l1l
    void provideMeasurement(com.mediatek.location.lppe.wlan.WlanProvideMeasurement) -> ll1
    void requestCapabilities(int) -> lll
com.mediatek.location.lppe.wlan.LPPeWlan$LPPeWlanSender -> com.mediatek.location.lppe.wlan.l1l:
    1:1:void <init>():27:27 -> <init>
    1:3:boolean provideCapabilities(com.mediatek.socket.base.UdpClient,int,com.mediatek.location.lppe.wlan.WlanProvideCapabilities):44:46 -> l11
    4:12:boolean provideCapabilities(com.mediatek.socket.base.UdpClient,int,com.mediatek.location.lppe.wlan.WlanProvideCapabilities):48:56 -> l11
    1:3:boolean provideMeasurement(com.mediatek.socket.base.UdpClient,com.mediatek.location.lppe.wlan.WlanProvideMeasurement):90:92 -> l1l
    4:11:boolean provideMeasurement(com.mediatek.socket.base.UdpClient,com.mediatek.location.lppe.wlan.WlanProvideMeasurement):94:101 -> l1l
com.mediatek.location.lppe.wlan.WlanApADSupported -> com.mediatek.location.lppe.wlan.ll1:
    boolean aplist -> l11
    boolean transmitPower -> lll
    com.mediatek.location.lppe.wlan.WlanApADSupported _instance -> l1ll
    boolean antennaGain -> l111
    boolean locationreliability -> ll1
    boolean nonServing -> l1l1
    boolean aplocation -> l1l
    boolean coverageArea -> l11l
    1:1:void <clinit>():9:9 -> <clinit>
    1:1:void <init>():7:7 -> <init>
    2:2:void <init>():14:14 -> <init>
    3:3:void <init>():18:18 -> <init>
    4:4:void <init>():22:22 -> <init>
    5:5:void <init>():26:26 -> <init>
    6:6:void <init>():30:30 -> <init>
    7:7:void <init>():34:34 -> <init>
    8:8:void <init>():41:41 -> <init>
    1:1:boolean equals(java.lang.Object):50:50 -> equals
    2:3:boolean equals(java.lang.Object):54:55 -> equals
    4:4:boolean equals(java.lang.Object):57:57 -> equals
    5:5:boolean equals(java.lang.Object):59:59 -> equals
    6:6:boolean equals(java.lang.Object):61:61 -> equals
    7:7:boolean equals(java.lang.Object):63:63 -> equals
    8:8:boolean equals(java.lang.Object):65:65 -> equals
    9:9:boolean equals(java.lang.Object):67:67 -> equals
    1:7:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):87:93 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:8:com.mediatek.location.lppe.wlan.WlanApADSupported decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):98:105 -> ll1
    1:10:java.lang.String toString():73:82 -> toString
com.mediatek.location.lppe.wlan.WlanApCapability -> com.mediatek.location.lppe.wlan.lll:
    byte[] apMACAddress -> l11
    com.mediatek.location.lppe.wlan.WlanTypesSupported apTypes -> l1l
    com.mediatek.location.lppe.wlan.WlanApCapability _instance -> ll1
    1:1:void <clinit>():12:12 -> <clinit>
    1:1:void <init>():10:10 -> <init>
    2:3:void <init>():14:15 -> <init>
    1:1:boolean equals(java.lang.Object):24:24 -> equals
    2:3:boolean equals(java.lang.Object):28:29 -> equals
    4:4:boolean equals(java.lang.Object):31:31 -> equals
    1:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):46:48 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):10:10 -> l1l
    1:3:com.mediatek.location.lppe.wlan.WlanApCapability decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):53:55 -> ll1
    1:5:java.lang.String toString():37:41 -> toString
com.mediatek.location.lppe.wlan.WlanApMeasurement -> com.mediatek.location.lppe.wlan.l111:
    int valid -> l11
    float apRSSI -> lll
    byte[] apSSID -> l1l1
    byte[] apMACAddress -> ll1
    short apChanFreq -> l111
    com.mediatek.location.lppe.wlan.WlanApMeasurement _instance -> l1ll
    com.mediatek.location.lppe.wlan.WlanRTD apRtd -> l11l
    boolean servingFlag -> l1l
    1:1:void <clinit>():12:12 -> <clinit>
    1:1:void <init>():10:10 -> <init>
    2:2:void <init>():20:20 -> <init>
    3:3:void <init>():25:25 -> <init>
    4:4:void <init>():29:29 -> <init>
    5:5:void <init>():36:36 -> <init>
    6:6:void <init>():41:41 -> <init>
    7:7:void <init>():46:46 -> <init>
    8:8:void <init>():50:50 -> <init>
    1:1:boolean equals(java.lang.Object):59:59 -> equals
    2:3:boolean equals(java.lang.Object):63:64 -> equals
    4:4:boolean equals(java.lang.Object):66:66 -> equals
    5:5:boolean equals(java.lang.Object):68:68 -> equals
    6:6:boolean equals(java.lang.Object):70:70 -> equals
    7:7:boolean equals(java.lang.Object):72:72 -> equals
    8:8:boolean equals(java.lang.Object):74:74 -> equals
    9:9:boolean equals(java.lang.Object):76:76 -> equals
    1:9:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):96:104 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):10:10 -> l1l
    1:8:com.mediatek.location.lppe.wlan.WlanApMeasurement decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):109:116 -> ll1
    1:3:com.mediatek.location.lppe.wlan.WlanApMeasurement[] getArray(com.mediatek.socket.base.SocketUtils$Codable[]):122:124 -> lll
    1:10:java.lang.String toString():82:91 -> toString
com.mediatek.location.lppe.wlan.WlanMeasurements -> com.mediatek.location.lppe.wlan.l11l:
    boolean apAG -> lll1
    boolean apRTD -> l1ll
    boolean ueRSSI -> l11l1
    boolean apPhyType -> l111
    boolean ueTP -> llll
    boolean apSSID -> l1l
    boolean apRSSI -> l11l
    boolean ueAG -> l1111
    boolean oc -> l11ll
    boolean nonServing -> l11
    boolean ueSN -> l111l
    boolean apDevType -> lll
    boolean apTP -> ll1l
    boolean apRepLoc -> ll11
    boolean apSN -> ll1
    com.mediatek.location.lppe.wlan.WlanMeasurements _instance -> l1l11
    boolean apChanFreq -> l1l1
    1:1:void <clinit>():9:9 -> <clinit>
    1:1:void <init>():7:7 -> <init>
    2:2:void <init>():14:14 -> <init>
    3:3:void <init>():18:18 -> <init>
    4:4:void <init>():22:22 -> <init>
    5:5:void <init>():26:26 -> <init>
    6:6:void <init>():30:30 -> <init>
    7:7:void <init>():34:34 -> <init>
    8:8:void <init>():38:38 -> <init>
    9:9:void <init>():42:42 -> <init>
    10:10:void <init>():46:46 -> <init>
    11:11:void <init>():50:50 -> <init>
    12:12:void <init>():54:54 -> <init>
    13:13:void <init>():58:58 -> <init>
    14:14:void <init>():62:62 -> <init>
    15:15:void <init>():66:66 -> <init>
    16:16:void <init>():70:70 -> <init>
    17:17:void <init>():74:74 -> <init>
    1:1:boolean equals(java.lang.Object):83:83 -> equals
    2:3:boolean equals(java.lang.Object):87:88 -> equals
    4:4:boolean equals(java.lang.Object):90:90 -> equals
    5:5:boolean equals(java.lang.Object):92:92 -> equals
    6:6:boolean equals(java.lang.Object):94:94 -> equals
    7:7:boolean equals(java.lang.Object):96:96 -> equals
    8:8:boolean equals(java.lang.Object):98:98 -> equals
    9:9:boolean equals(java.lang.Object):100:100 -> equals
    10:10:boolean equals(java.lang.Object):102:102 -> equals
    11:11:boolean equals(java.lang.Object):104:104 -> equals
    12:12:boolean equals(java.lang.Object):106:106 -> equals
    13:13:boolean equals(java.lang.Object):108:108 -> equals
    14:14:boolean equals(java.lang.Object):110:110 -> equals
    15:15:boolean equals(java.lang.Object):112:112 -> equals
    16:16:boolean equals(java.lang.Object):114:114 -> equals
    17:17:boolean equals(java.lang.Object):116:116 -> equals
    18:18:boolean equals(java.lang.Object):118:118 -> equals
    1:16:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):147:162 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:17:com.mediatek.location.lppe.wlan.WlanMeasurements decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):167:183 -> ll1
    1:19:java.lang.String toString():124:142 -> toString
com.mediatek.location.lppe.wlan.WlanProvideCapabilities -> com.mediatek.location.lppe.wlan.l1l1:
    com.mediatek.location.lppe.wlan.WlanApADSupported apADSupported -> l11l
    boolean isWlanSupported -> l11
    boolean wlanTypesSupportedValid -> lll
    byte[] ueMACAddress -> l1l1
    boolean apCapabilityValid -> l1l
    com.mediatek.location.lppe.wlan.WlanApCapability apCapability -> ll1
    com.mediatek.location.lppe.wlan.WlanTypesSupported wlanTypesSupported -> l111
    com.mediatek.location.lppe.wlan.WlanProvideCapabilities _instance -> ll11
    com.mediatek.location.lppe.wlan.WlanMeasurements measSupported -> l1ll
    1:1:void <clinit>():16:16 -> <clinit>
    1:1:void <init>():14:14 -> <init>
    2:2:void <init>():21:21 -> <init>
    3:4:void <init>():26:27 -> <init>
    5:6:void <init>():32:33 -> <init>
    7:7:void <init>():37:37 -> <init>
    8:8:void <init>():42:42 -> <init>
    9:9:void <init>():47:47 -> <init>
    1:1:boolean equals(java.lang.Object):56:56 -> equals
    2:3:boolean equals(java.lang.Object):60:61 -> equals
    4:4:boolean equals(java.lang.Object):63:63 -> equals
    5:5:boolean equals(java.lang.Object):65:65 -> equals
    6:6:boolean equals(java.lang.Object):67:67 -> equals
    7:7:boolean equals(java.lang.Object):69:69 -> equals
    8:8:boolean equals(java.lang.Object):71:71 -> equals
    9:9:boolean equals(java.lang.Object):73:73 -> equals
    10:10:boolean equals(java.lang.Object):75:75 -> equals
    1:9:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):96:104 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):14:14 -> l1l
    1:9:com.mediatek.location.lppe.wlan.WlanProvideCapabilities decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):109:117 -> ll1
    1:11:java.lang.String toString():81:91 -> toString
com.mediatek.location.lppe.wlan.WlanProvideMeasurement -> com.mediatek.location.lppe.wlan.l1ll:
    com.mediatek.location.lppe.wlan.WlanProvideMeasurement _instance -> l1l
    com.mediatek.location.lppe.wlan.WlanApMeasurement[] meas -> l11
    1:1:void <clinit>():12:12 -> <clinit>
    1:1:void <init>():10:10 -> <init>
    2:2:void <init>():18:18 -> <init>
    1:1:boolean equals(java.lang.Object):27:27 -> equals
    2:3:boolean equals(java.lang.Object):31:32 -> equals
    1:2:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):46:47 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):10:10 -> l1l
    1:2:com.mediatek.location.lppe.wlan.WlanProvideMeasurement decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):52:53 -> ll1
    1:4:java.lang.String toString():38:41 -> toString
com.mediatek.location.lppe.wlan.WlanRTD -> com.mediatek.location.lppe.wlan.ll11:
    int value -> l11
    short accuracy -> ll1
    com.mediatek.location.lppe.wlan.WlanRTD _instance -> lll
    com.mediatek.location.lppe.wlan.WlanRTDUnit unit -> l1l
    1:1:void <clinit>():9:9 -> <clinit>
    1:1:void <init>():7:7 -> <init>
    2:3:void <init>():14:15 -> <init>
    4:4:void <init>():19:19 -> <init>
    1:1:boolean equals(java.lang.Object):28:28 -> equals
    2:3:boolean equals(java.lang.Object):32:33 -> equals
    4:4:boolean equals(java.lang.Object):35:35 -> equals
    5:5:boolean equals(java.lang.Object):37:37 -> equals
    1:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):53:55 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:4:com.mediatek.location.lppe.wlan.WlanRTD decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):60:63 -> ll1
    1:6:java.lang.String toString():43:48 -> toString
com.mediatek.location.lppe.wlan.WlanRTDUnit -> com.mediatek.location.lppe.wlan.WlanRTDUnit:
    com.mediatek.location.lppe.wlan.WlanRTDUnit nanoseconds -> lll
    com.mediatek.location.lppe.wlan.WlanRTDUnit microseconds -> l11
    com.mediatek.location.lppe.wlan.WlanRTDUnit tenthsOfNanoseconds -> l111
    com.mediatek.location.lppe.wlan.WlanRTDUnit end -> l11l
    com.mediatek.location.lppe.wlan.WlanRTDUnit hundredsOfNanoseconds -> l1l
    com.mediatek.location.lppe.wlan.WlanRTDUnit[] $VALUES -> l1ll
    com.mediatek.location.lppe.wlan.WlanRTDUnit tensOfNanoseconds -> ll1
    com.mediatek.location.lppe.wlan.WlanRTDUnit _instance -> l1l1
    1:6:void <clinit>():8:13 -> <clinit>
    7:7:void <clinit>() -> <clinit>
    8:8:void <clinit>():16:16 -> <clinit>
    1:1:void <init>(java.lang.String,int):7:7 -> <init>
    1:1:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):20:20 -> l11
    2:2:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):37:37 -> l11
    3:3:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):34:34 -> l11
    4:4:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):31:31 -> l11
    5:5:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):28:28 -> l11
    6:6:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):25:25 -> l11
    7:7:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):22:22 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:1:com.mediatek.location.lppe.wlan.WlanRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):46:46 -> ll1
    2:2:com.mediatek.location.lppe.wlan.WlanRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):59:59 -> ll1
    3:3:com.mediatek.location.lppe.wlan.WlanRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):57:57 -> ll1
    4:4:com.mediatek.location.lppe.wlan.WlanRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):55:55 -> ll1
    5:5:com.mediatek.location.lppe.wlan.WlanRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):53:53 -> ll1
    6:6:com.mediatek.location.lppe.wlan.WlanRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):51:51 -> ll1
    7:7:com.mediatek.location.lppe.wlan.WlanRTDUnit decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):49:49 -> ll1
    1:1:com.mediatek.location.lppe.wlan.WlanRTDUnit valueOf(java.lang.String):7:7 -> valueOf
    1:1:com.mediatek.location.lppe.wlan.WlanRTDUnit[] values():7:7 -> values
com.mediatek.location.lppe.wlan.WlanRTDUnit$1 -> com.mediatek.location.lppe.wlan.ll1l:
    int[] $SwitchMap$com$mediatek$location$lppe$wlan$WlanRTDUnit -> l11
    1:1:void <clinit>():20:20 -> <clinit>
com.mediatek.location.lppe.wlan.WlanTypesSupported -> com.mediatek.location.lppe.wlan.lll1:
    boolean ieee802_11a -> l11
    boolean ieee802_11n -> lll
    boolean ieee802_11ac -> l111
    com.mediatek.location.lppe.wlan.WlanTypesSupported _instance -> l1l1
    boolean ieee802_11g -> ll1
    boolean ieee802_11b -> l1l
    boolean ieee802_11ad -> l11l
    1:1:void <clinit>():9:9 -> <clinit>
    1:1:void <init>():7:7 -> <init>
    2:7:void <init>():11:16 -> <init>
    1:1:boolean equals(java.lang.Object):25:25 -> equals
    2:3:boolean equals(java.lang.Object):29:30 -> equals
    4:4:boolean equals(java.lang.Object):32:32 -> equals
    5:5:boolean equals(java.lang.Object):34:34 -> equals
    6:6:boolean equals(java.lang.Object):36:36 -> equals
    7:7:boolean equals(java.lang.Object):38:38 -> equals
    8:8:boolean equals(java.lang.Object):40:40 -> equals
    1:6:void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer):59:64 -> l11
    1:1:com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):7:7 -> l1l
    1:7:com.mediatek.location.lppe.wlan.WlanTypesSupported decode(com.mediatek.socket.base.SocketUtils$BaseBuffer):69:75 -> ll1
    1:9:java.lang.String toString():46:54 -> toString
com.mediatek.socket.base.SocketUtils -> l1l.l11.l1l.l11.l111:
    1:20:void assertSize(java.lang.Object,int,int):335:354 -> l11
    21:24:void assertSize(java.lang.Object,int,int):357:360 -> l11
    25:25:void assertSize(java.lang.Object,int,int):364:364 -> l11
com.mediatek.socket.base.SocketUtils$BaseBuffer -> l1l.l11.l1l.l11.l11:
    int mOffset -> l11
    byte[] mBuff -> l1l
    1:3:void <init>(int):34:36 -> <init>
    1:1:void assertNotNull(java.lang.Object):328:328 -> l11
    1:1:byte[] getBuff():56:56 -> l111
    1:2:short getShort():200:201 -> l1111
    1:4:java.lang.String getString():230:233 -> l111l
    5:5:java.lang.String getString():235:235 -> l111l
    6:6:java.lang.String getString():237:237 -> l111l
    1:2:byte getByte():193:194 -> l11l
    1:4:void putArrayByte(byte[]):126:129 -> l11l1
    1:4:void putArrayCodable(com.mediatek.socket.base.SocketUtils$Codable[]):181:184 -> l11ll
    1:4:byte[] getArrayByte():256:259 -> l1l
    1:1:com.mediatek.socket.base.SocketUtils$Codable getCodable(com.mediatek.socket.base.SocketUtils$Codable):243:243 -> l1l1
    1:1:void putBool(boolean):69:69 -> l1l11
    1:2:void putByte(byte):73:74 -> l1l1l
    1:2:double getDouble():225:226 -> l1ll
    1:2:void putCodable(com.mediatek.socket.base.SocketUtils$Codable):113:114 -> l1ll1
    1:1:void putDouble(double):97:97 -> l1lll
    1:2:com.mediatek.socket.base.SocketUtils$Codable[] getArrayCodable(com.mediatek.socket.base.SocketUtils$Codable):318:319 -> ll1
    3:3:com.mediatek.socket.base.SocketUtils$Codable[] getArrayCodable(com.mediatek.socket.base.SocketUtils$Codable):321:321 -> ll1
    1:2:float getFloat():220:221 -> ll11
    1:1:void putFloat(float):93:93 -> ll111
    1:2:void putInt(int):83:84 -> ll11l
    1:2:int getInt():207:208 -> ll1l
    1:2:void putLong(long):88:89 -> ll1l1
    1:2:void putShort(short):78:79 -> ll1ll
    1:1:boolean getBool():189:189 -> lll
    1:2:long getLong():214:215 -> lll1
    1:1:void putString(java.lang.String):101:101 -> lll11
    2:5:void putString(java.lang.String):103:106 -> lll11
    6:6:void putString(java.lang.String):108:108 -> lll11
    1:1:void setOffset(int):48:48 -> lll1l
    1:1:int getOffset():52:52 -> llll
    1:5:java.lang.String toString():40:44 -> toString
com.mediatek.socket.base.SocketUtils$Codable -> l1l.l11.l1l.l11.l1l:
    void encode(com.mediatek.socket.base.SocketUtils$BaseBuffer) -> l11
    com.mediatek.socket.base.SocketUtils$Codable decode(com.mediatek.socket.base.SocketUtils$BaseBuffer) -> l1l
com.mediatek.socket.base.SocketUtils$ProtocolHandler -> l1l.l11.l1l.l11.ll1:
    boolean decode(com.mediatek.socket.base.SocketUtils$UdpServerInterface) -> l11
com.mediatek.socket.base.SocketUtils$UdpServerInterface -> l1l.l11.l1l.l11.lll:
    com.mediatek.socket.base.SocketUtils$BaseBuffer getBuff() -> l11
com.mediatek.socket.base.UdpClient -> l1l.l11.l1l.l11.l1l1:
    java.net.InetAddress mInetAddress -> l111
    java.lang.String mHost -> ll1
    com.mediatek.socket.base.UdpClient$LbsHidlDeathRecipient mLLbsHidlDeathRecipient -> ll1l
    int mPort -> lll
    java.lang.String mChannelName -> l1ll
    vendor.mediatek.hardware.lbs.V1_0.ILbs mLbsHidlClient -> ll11
    java.net.DatagramSocket mNetSocket -> l11l
    java.net.DatagramPacket mPacket -> l1l1
    com.mediatek.socket.base.SocketUtils$BaseBuffer mBuff -> l11
    boolean mIsLocalSocket -> l1l
    1:1:void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace,int):46:46 -> <init>
    2:2:void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace,int):54:54 -> <init>
    3:3:void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace,int):56:56 -> <init>
    4:6:void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace,int):47:49 -> <init>
    1:1:void close():141:141 -> l11
    2:3:void close():144:145 -> l11
    1:1:boolean lbsHidlInit(java.lang.String):65:65 -> l111
    2:3:boolean lbsHidlInit(java.lang.String):70:71 -> l111
    4:4:boolean lbsHidlInit(java.lang.String):73:73 -> l111
    1:1:boolean write():116:116 -> l11l
    2:4:boolean write():118:120 -> l11l
    5:6:boolean write():123:124 -> l11l
    7:9:boolean write():128:130 -> l11l
    10:11:boolean write():133:134 -> l11l
    1:2:boolean connect():93:94 -> l1l
    3:5:boolean connect():97:99 -> l1l
    6:7:boolean connect():101:102 -> l1l
    8:8:boolean connect():105:105 -> l1l
    1:2:java.util.ArrayList convertByteArrayToArrayList(byte[],int):83:84 -> ll1
    3:3:java.util.ArrayList convertByteArrayToArrayList(byte[],int):86:86 -> ll1
    1:1:com.mediatek.socket.base.SocketUtils$BaseBuffer getBuff():112:112 -> lll
com.mediatek.socket.base.UdpClient$LbsHidlDeathRecipient -> l1l.l11.l1l.l11.l11l:
    com.mediatek.socket.base.UdpClient this$0 -> l11
    1:1:void <init>(com.mediatek.socket.base.UdpClient):57:57 -> <init>
    1:1:void serviceDied(long):60:60 -> serviceDied
com.mediatek.socket.base.UdpServer -> l1l.l11.l1l.l11.ll1l:
    com.mediatek.socket.base.UdpServer$LbsHidlDeathRecipient mLLbsHidlDeathRecipient -> l1l1
    java.net.DatagramSocket mNetSocket -> ll1
    java.lang.String mChannelName -> lll
    com.mediatek.socket.base.UdpServer$LbsHidlCallback mLbsHidlCallback -> l11l
    com.mediatek.socket.base.SocketUtils$ProtocolHandler mReceiver -> l1ll
    com.mediatek.socket.base.SocketUtils$BaseBuffer mBuff -> l11
    boolean mIsLocalSocket -> l1l
    vendor.mediatek.hardware.lbs.V1_0.ILbs mLbsHidlClient -> l111
    1:1:void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace,int):99:99 -> <init>
    2:2:void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace,int):48:48 -> <init>
    3:3:void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace,int):60:60 -> <init>
    4:6:void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace,int):100:102 -> <init>
    7:7:void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace,int):104:104 -> <init>
    1:1:com.mediatek.socket.base.SocketUtils$BaseBuffer getBuff():157:157 -> l11
    1:1:boolean access$300(com.mediatek.socket.base.UdpServer,java.lang.String):23:23 -> l111
    1:1:void close():161:161 -> l11l
    2:2:void close():163:163 -> l11l
    1:1:com.mediatek.socket.base.SocketUtils$BaseBuffer access$000(com.mediatek.socket.base.UdpServer):23:23 -> l1l
    1:2:void covertArrayListToByteArray(java.util.ArrayList,byte[]):43:44 -> l1l1
    1:2:boolean lbsHidlInit(java.lang.String):75:76 -> l1ll
    3:3:boolean lbsHidlInit(java.lang.String):78:78 -> l1ll
    4:4:boolean lbsHidlInit(java.lang.String):80:80 -> l1ll
    1:1:void access$100(com.mediatek.socket.base.UdpServer,long):23:23 -> ll1
    1:1:void msleep(long):206:206 -> ll11
    2:2:void msleep(long):208:208 -> ll11
    1:1:void setReceiver(com.mediatek.socket.base.SocketUtils$ProtocolHandler):89:89 -> ll1l
    1:1:java.lang.String access$200(com.mediatek.socket.base.UdpServer):23:23 -> lll
com.mediatek.socket.base.UdpServer$LbsHidlCallback -> l1l.l11.l1l.l11.l1ll:
    com.mediatek.socket.base.UdpServer this$0 -> l11
    1:1:void <init>(com.mediatek.socket.base.UdpServer):49:49 -> <init>
    1:1:boolean callbackToClient(java.util.ArrayList):51:51 -> ll1
    2:3:boolean callbackToClient(java.util.ArrayList):53:54 -> ll1
com.mediatek.socket.base.UdpServer$LbsHidlDeathRecipient -> l1l.l11.l1l.l11.ll11:
    com.mediatek.socket.base.UdpServer this$0 -> l11
    1:1:void <init>(com.mediatek.socket.base.UdpServer):61:61 -> <init>
    1:1:void serviceDied(long):64:64 -> serviceDied
    2:3:void serviceDied(long):67:68 -> serviceDied
vendor.mediatek.hardware.lbs.V1_0.ILbs -> ll1.l11.l11.l11.l11.l1l:
    boolean sendToServer(java.util.ArrayList) -> l11
    java.util.ArrayList interfaceChain() -> l111
    1:1:vendor.mediatek.hardware.lbs.V1_0.ILbs asInterface(android.os.IHwBinder):18:18 -> l11l
    2:3:vendor.mediatek.hardware.lbs.V1_0.ILbs asInterface(android.os.IHwBinder):20:21 -> l11l
    4:4:vendor.mediatek.hardware.lbs.V1_0.ILbs asInterface(android.os.IHwBinder):24:24 -> l11l
    5:6:vendor.mediatek.hardware.lbs.V1_0.ILbs asInterface(android.os.IHwBinder):27:28 -> l11l
    void setCallback(vendor.mediatek.hardware.lbs.V1_0.ILbsCallback) -> l1l
    1:1:vendor.mediatek.hardware.lbs.V1_0.ILbs getService(java.lang.String):70:70 -> lll
vendor.mediatek.hardware.lbs.V1_0.ILbs$Proxy -> ll1.l11.l11.l11.l11.l11:
    android.os.IHwBinder mRemote -> l11
    1:2:void <init>(android.os.IHwBinder):200:201 -> <init>
    1:1:android.os.IHwBinder asBinder():206:206 -> asBinder
    1:1:boolean equals(java.lang.Object):221:221 -> equals
    1:1:int hashCode():226:226 -> hashCode
    1:3:boolean sendToServer(java.util.ArrayList):250:252 -> l11
    4:4:boolean sendToServer(java.util.ArrayList):254:254 -> l11
    5:7:boolean sendToServer(java.util.ArrayList):256:258 -> l11
    8:8:boolean sendToServer(java.util.ArrayList):260:260 -> l11
    9:10:boolean sendToServer(java.util.ArrayList):263:264 -> l11
    1:2:java.util.ArrayList interfaceChain():292:293 -> l111
    3:3:java.util.ArrayList interfaceChain():295:295 -> l111
    4:6:java.util.ArrayList interfaceChain():297:299 -> l111
    7:7:java.util.ArrayList interfaceChain():301:301 -> l111
    8:9:java.util.ArrayList interfaceChain():304:305 -> l111
    1:3:void setCallback(vendor.mediatek.hardware.lbs.V1_0.ILbsCallback):233:235 -> l1l
    4:4:void setCallback(vendor.mediatek.hardware.lbs.V1_0.ILbsCallback):237:237 -> l1l
    5:7:void setCallback(vendor.mediatek.hardware.lbs.V1_0.ILbsCallback):239:241 -> l1l
    8:9:void setCallback(vendor.mediatek.hardware.lbs.V1_0.ILbsCallback):243:244 -> l1l
    1:2:java.lang.String interfaceDescriptor():329:330 -> l1l1
    3:3:java.lang.String interfaceDescriptor():332:332 -> l1l1
    4:6:java.lang.String interfaceDescriptor():334:336 -> l1l1
    7:7:java.lang.String interfaceDescriptor():338:338 -> l1l1
    8:9:java.lang.String interfaceDescriptor():341:342 -> l1l1
    1:1:boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long):402:402 -> linkToDeath
    1:1:java.lang.String toString():212:212 -> toString
vendor.mediatek.hardware.lbs.V1_0.ILbsCallback -> ll1.l11.l11.l11.l11.lll:
    boolean callbackToClient(java.util.ArrayList) -> ll1
vendor.mediatek.hardware.lbs.V1_0.ILbsCallback$Stub -> ll1.l11.l11.l11.l11.ll1:
    1:1:void <init>():420:420 -> <init>
    1:1:java.util.ArrayList interfaceChain():428:428 -> l111
    void setHALInstrumentation() -> l1111
    void debug(android.os.NativeHandle,java.util.ArrayList) -> l1l1
    1:4:android.hidl.base.V1_0.DebugInfo getDebugInfo():473:476 -> l1ll
    1:1:java.util.ArrayList getHashChain():448:448 -> ll11
    java.lang.String interfaceDescriptor() -> ll1l
    1:1:void notifySyspropsChanged():483:483 -> lll1
    void ping() -> llll
    1:1:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):630:630 -> onTransact
    2:2:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):632:632 -> onTransact
    3:3:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):619:619 -> onTransact
    4:7:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):621:624 -> onTransact
    8:8:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):609:609 -> onTransact
    9:11:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):611:613 -> onTransact
    12:12:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):596:596 -> onTransact
    13:13:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):598:598 -> onTransact
    14:14:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):562:562 -> onTransact
    15:16:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):564:565 -> onTransact
    17:17:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):567:567 -> onTransact
    18:21:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):569:572 -> onTransact
    22:22:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):576:576 -> onTransact
    23:23:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):578:578 -> onTransact
    24:24:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):582:582 -> onTransact
    25:25:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):579:579 -> onTransact
    26:26:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):586:586 -> onTransact
    27:27:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):588:588 -> onTransact
    28:28:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):590:590 -> onTransact
    29:29:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):551:551 -> onTransact
    30:33:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):553:556 -> onTransact
    34:34:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):539:539 -> onTransact
    35:39:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):541:545 -> onTransact
    40:40:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):528:528 -> onTransact
    41:44:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):530:533 -> onTransact
    45:45:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):516:516 -> onTransact
    46:50:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int):518:522 -> onTransact
    1:1:android.os.IHwInterface queryLocalInterface(java.lang.String):495:495 -> queryLocalInterface
    1:1:java.lang.String toString():507:507 -> toString
